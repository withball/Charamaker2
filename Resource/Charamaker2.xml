<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Charamaker2</name>
    </assembly>
    <members>
        <member name="T:Charamaker2.Character.setu">
            <summary>
            関節。pictureを一枚持ち、いい感じに構成する
            </summary>
        </member>
        <member name="F:Charamaker2.Character.setu.nm">
            <summary>
            節の前。一つのキャラクター内で被ってはいけない。あと""もやめてくれ
            </summary>
        </member>
        <member name="F:Charamaker2.Character.setu.p">
            <summary>
            ピクチャーだよ！
            </summary>
        </member>
        <member name="F:Charamaker2.Character.setu.sts">
            <summary>
            下にある節の塊
            </summary>
        </member>
        <member name="F:Charamaker2.Character.setu.dx">
            <summary>
            前の物体からの位置。前がキャラクターなら中心からの位置、節ならpictureの左上からの位置。
            </summary>
        </member>
        <member name="F:Charamaker2.Character.setu.dy">
            <summary>
            前の物体からの位置。前がキャラクターなら中心からの位置、節ならpictureの左上からの位置。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setu.#ctor(System.String,System.Single,System.Single,Charamaker2.picture,System.Collections.Generic.List{Charamaker2.Character.setu})">
            <summary>
            節のコンストラクタ
            </summary>
            <param name="name">節の名前</param>
            <param name="ddx">節の位置x</param>
            <param name="ddy">節の位置y</param>
            <param name="pic">ピクチャー</param>
            <param name="kansetu">下の関節のリスト。nullで自動</param>
        </member>
        <member name="M:Charamaker2.Character.setu.#ctor(Charamaker2.Character.setu)">
            <summary>
            コピーするためのコンストラクタ
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.setu.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setu.GetSetu(System.String)">
            <summary>
            ツリーの中にある節を一つ見つける。深さ優先探索。
            </summary>
            <param name="name">見つける節の名前</param>
            <returns>見つかった節</returns>
        </member>
        <member name="M:Charamaker2.Character.setu.Getrootsetu(System.String)">
            <summary>
            ツリーの中にある節の親を一つ見つける。深さ優先探索。
            </summary>
            <param name="name">見つける節の名前</param>
            <returns>見つかった親</returns>
        </member>
        <member name="M:Charamaker2.Character.setu.Removesetu(System.String,Charamaker2.hyojiman)">
            <summary>
            節を消去する。もちろんその下の節も消滅する。
            </summary>
            <param name="name">消す節の名前</param>
            <param name="hyojiman">picsから消すのでその表示マンも必要なのだ！</param>
        </member>
        <member name="M:Charamaker2.Character.setu.getallsetu">
            <summary>
            自分と下にある節の列を取得する
            </summary>
            <returns>得られたリスト</returns>
        </member>
        <member name="M:Charamaker2.Character.setu.frame">
            <summary>
            節とかの位置を整えるためのメソッド
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setu.scalechange(System.Single)">
            <summary>
            節とかの大きさなどを変えるためのメソッド
            </summary>
            <param name="sc">スケール</param>
        </member>
        <member name="M:Charamaker2.Character.setu.copy(Charamaker2.Character.setu)">
            <summary>
            コピーするためのメソッド。下の奴らとかはコピーしない。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.setu.clone">
            <summary>
            クローンするメソッド
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.setu.ToSave">
            <summary>
            セーブする
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.setu.ToLoad(Charamaker2.DataSaver)">
            <summary>
            ロードする。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.character">
            <summary>
            キャラクターを構成するためのクラス。
            イメージは棒人間に肉を乗せる感じ。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.onepicturechara(System.String,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Single,System.Double,System.Single,System.Single,System.Boolean)">
            <summary>
            ピクチャー一枚だけのキャラクターを作る
            </summary>
            <param name="tex">テクスチャー</param>
            <param name="z">Z</param>
            <param name="widthscale">横幅をここにそろえる</param>
            <param name="hin">やっぱ縦幅にする</param>
            <param name="txp">中心点の位置x</param>
            <param name="typ">中心点の位置y</param>
            <param name="opa">透明度</param>
            <param name="rad">角度</param>
            <param name="tx">中心の位置x</param>
            <param name="ty">中心の位置y</param>
            <param name="mirror">反転</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.character.onepicturechara(Charamaker2.picture)">
            <summary>
            ピクチャー一枚だけのキャラクターを作る
            </summary>
            <param name="pic">ピクチャー</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.character.kyori(Charamaker2.Character.character)">
             <summary>
            図形と図形の重心の距離を測る
             </summary>
             <param name="s">その図形の片割れ</param>
             <returns>距離</returns>
        </member>
        <member name="M:Charamaker2.Character.character.kyori(System.Single,System.Single)">
            <summary>
            図形の重心とある座標の距離を測る
            </summary>
            <param name="px">そのx座標</param>
            <param name="py">そのy座標</param>
            <returns>距離</returns>
        </member>
        <member name="M:Charamaker2.Character.character.nasukaku(Charamaker2.Character.character)">
            <summary>
            図形と図形の重心の紡ぐ線の角度を計る
            </summary>
            <param name="s">その図形</param>
            <returns>角度</returns>
        </member>
        <member name="M:Charamaker2.Character.character.nasukaku(System.Single,System.Single)">
            <summary>
            図形の重心とある座標の紡ぐ線の角度を測る
            </summary>
            <param name="px">そのx座標</param>
            <param name="py">そのy座標</param>
            <returns>角度</returns>
        </member>
        <member name="F:Charamaker2.Character.character.x">
            <summary>
            xy座標
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.y">
            <summary>
            xy座標
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.w">
            <summary>
            幅と高さ
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.h">
            <summary>
            幅と高さ
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.rad">
            <summary>
            ラジアン角度
            </summary>
        </member>
        <member name="P:Charamaker2.Character.character.RAD">
            <summary>
            ラジアン角度。-PI＜＝＜＝Pi
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.tx">
            <summary>
            中心点の位置
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.ty">
            <summary>
            中心点の位置
            </summary>
        </member>
        <member name="P:Charamaker2.Character.character.TX">
            <summary>
            画像の中心点xを返す。
            </summary>
        </member>
        <member name="P:Charamaker2.Character.character.TY">
            <summary>
            画像の中心点yを返す
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.core">
            <summary>
            核となる一つの節
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.motions">
            <summary>
            持っているモーション
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character.kijyun">
            <summary>
            基準となるキャラクター。
            </summary>
        </member>
        <member name="P:Charamaker2.Character.character.mirror">
            <summary>
            キャラクターを反転させる奴
            </summary>
        </member>
        <member name="F:Charamaker2.Character.character._mirror">
            <summary>
            素のミラー
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,Charamaker2.Character.setu)">
            <summary>
            キャラクターのコンストラクタ。この瞬間基準がセットされる
            </summary>
            <param name="xx">左上x座標</param>
            <param name="yy">左上y座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="ttx">中心x座標</param>
            <param name="tty">中心y座標</param>
            <param name="sita">ラディアン角度</param>
            <param name="cor">核となる節</param>
        </member>
        <member name="M:Charamaker2.Character.character.#ctor(Charamaker2.Character.character,System.Boolean,System.Boolean)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="c">コピー元</param>
            <param name="setkijyun">基準をセット/コピーするか</param>
            <param name="motion">モーションまでもコピーするか</param>
        </member>
        <member name="M:Charamaker2.Character.character.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.GetSetu(System.String)">
            <summary>
            節のツリーの中にある節を一つ見つける。深さ優先探索。
            </summary>
            <param name="name">見つける節の名前</param>
            <returns>見つかった節</returns>
        </member>
        <member name="M:Charamaker2.Character.character.Getrootsetu(System.String)">
            <summary>
            節のツリーの中にある節の親を一つ見つける。深さ優先探索。
            </summary>
            <param name="name">見つける節の名前</param>
            <returns>見つかった親</returns>
        </member>
        <member name="M:Charamaker2.Character.character.Removesetu(System.String,Charamaker2.hyojiman)">
            <summary>
            節のリストにあるやつを消去する。もちろんその下の節も消滅する。
            </summary>
            <param name="name">消す節の名前</param>
            <param name="hyojiman">picsから消すのでその表示マンも必要なのだ！</param>
        </member>
        <member name="M:Charamaker2.Character.character.getallsetu">
            <summary>
            これに所属しているすべての節を取得する
            </summary>
            <returns>得られたリスト</returns>
        </member>
        <member name="M:Charamaker2.Character.character.setkijyuns">
            <summary>
            基準をセットするメソッド
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.getkijyun">
            <summary>
            基準をゲットする。基準がnullならそのまま自分を返す。
            </summary>
            <returns>基準か何かのキャラクター</returns>
        </member>
        <member name="M:Charamaker2.Character.character.resettokijyun(Charamaker2.hyojiman)">
            <summary>
            自身を基準と同一のものとする。節以下は新しくインスタンスを作る。
            </summary>
            <param name="hyo">表示を変えるために必要</param>
        </member>
        <member name="M:Charamaker2.Character.character.resettokijyun(System.Boolean,System.Boolean)">
            <summary>
            自身を基準と同一のものとする
            </summary>
            <param name="OPA">不透明度も同一とするか</param>
            <param name="TEX">テクスチャーも同一とするか</param>
        </member>
        <member name="M:Charamaker2.Character.character.refreshopa">
            <summary>
            不透明度のみを基準とそろえる
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.refreshmir">
            <summary>
            ピクチャーのミラーのみを基準とそろえる
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.refreshtokijyun(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            角度以外の要素を基準に整える
            </summary>
            <param name="OPA">不透明度も同一とするか</param>
            <param name="TEX">テクスチャーも同一とするか</param>
            <param name="MIR">反転も同一とするか</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Charamaker2.Character.character.copymotion(Charamaker2.Character.character,System.Boolean)" -->
        <member name="M:Charamaker2.Character.character.copykakudo(Charamaker2.Character.character)">
            <summary>
            角度をコピーする
            </summary>
            <param name="c">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.character.resethyoji(Charamaker2.hyojiman)">
            <summary>
            hyojimanに全ての節のピクチャーを追加する。
            </summary>
            <param name="hyojiman">追加するところ</param>
        </member>
        <member name="M:Charamaker2.Character.character.zchanged(Charamaker2.hyojiman)">
            <summary>
            zを変化させた時、hyojimanに再度追加することでソートを発生させるメソッド
            </summary>
            <param name="hyojiman">その表示マン</param>
        </member>
        <member name="F:Charamaker2.Character.character.premir">
            <summary>
            1フレーム前ミラーしてたかどうか。角度コピーとかで操作してね
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.frame(System.Single)">
            <summary>
            フレームを行う。節を整えて、モーションを行う。
            </summary>
            <param name="cl">モーションに使うクロック</param>
        </member>
        <member name="M:Charamaker2.Character.character.startmotion(System.Boolean)">
            <summary>
            モーションを動かす前に呼ぶじゃないと反転がおかしくなる
            </summary>
            <param name="gati">こちらはcharacter.frame内のみで呼びます。ほっといて！</param>
        </member>
        <member name="M:Charamaker2.Character.character.endmotion(System.Boolean)">
            <summary>
            モーションを動かした後に呼ぶじゃないと反転がおかしくなる
            </summary>
            <param name="gati">こちらはcharacter.frame内のみで呼びます。ほっといて！</param>
        </member>
        <member name="M:Charamaker2.Character.character.kijyuhanten">
            <summary>
            基準をもとに反転を行う
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.soroeru">
            <summary>
            節を整えたりする。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.scalechange(System.Single,System.Boolean)">
            <summary>
            キャラクターのサイズを変える
            </summary>
            <param name="sc">スケール</param>
            <param name="setkijyun">基準にも拡大を適用するか</param>
        </member>
        <member name="M:Charamaker2.Character.character.getcxy(System.Single,System.Single)">
            <summary>
            キャラクター上の一点のxy座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときのキャラクターの点の位置</param>
            <param name="hh">左上を0としたときのキャラクターの点の位置</param>
            <returns>返されるのはxy座標の値</returns>
        </member>
        <member name="M:Charamaker2.Character.character.getcx(System.Single,System.Single)">
            <summary>
            キャラクター上の一点のx座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときのキャラクターの点の位置</param>
            <param name="hh">左上を0としたときのキャラクターの点の位置</param>
            <returns>返されるのはx座標の値</returns>
        </member>
        <member name="M:Charamaker2.Character.character.getcy(System.Single,System.Single)">
            <summary>
            キャラクター上の一点のy座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときのキャラクターの点の位置</param>
            <param name="hh">左上を0としたときのキャラクターの点の位置</param>
            <returns>返されるのはy座標の値</returns>
        </member>
        <member name="M:Charamaker2.Character.character.gettxy">
            <summary>
            中心点のxy座標を返す。
            </summary>
            <returns>xy座標</returns>
        </member>
        <member name="M:Charamaker2.Character.character.gettx">
            <summary>
            中心点のx座標を返す。
            </summary>
            <returns>x座標</returns>
        </member>
        <member name="M:Charamaker2.Character.character.getty">
            <summary>
            中心点のy座標を返す。
            </summary>
            <returns>y座標</returns>
        </member>
        <member name="M:Charamaker2.Character.character.setcxy(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画像上の任意の一点をxy座標にセットする
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
            <param name="cx">画像上のwの点</param>
            <param name="cy">画像上のhの点</param>
        </member>
        <member name="M:Charamaker2.Character.character.setcxy(Charamaker2.Shapes.FXY,System.Single,System.Single)">
            <summary>
            画像上の任意の一点をxy座標にセットする
            </summary>
            <param name="xy">セットするxy座標</param>
            <param name="cx">画像上のwの点</param>
            <param name="cy">画像上のhの点</param>
        </member>
        <member name="M:Charamaker2.Character.character.settxy(System.Single,System.Single)">
            <summary>
            中心をxy座標にセットする。
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
        </member>
        <member name="M:Charamaker2.Character.character.settxy(Charamaker2.Shapes.FXY)">
            <summary>
            中心をxy座標にセットする。
            </summary>
            <param name="xy">セットするxy座標</param>
        </member>
        <member name="M:Charamaker2.Character.character.idouxy(System.Single,System.Single)">
            <summary>
            移動する奴
            </summary>
            <param name="dx">x方向の移動量</param>
            <param name="dy">y方向の移動量</param>
        </member>
        <member name="M:Charamaker2.Character.character.idouxy(Charamaker2.Shapes.FXY)">
            <summary>
            移動する奴
            </summary>
            <param name="dxy">xy方向の移動量</param>
        </member>
        <member name="M:Charamaker2.Character.character.wowidouxy(System.Single,System.Single)">
            <summary>
            回転とミラーしている方向に移動する奴
            </summary>
            <param name="dx">w方向の移動量</param>
            <param name="dy">h方向の移動量</param>
        </member>
        <member name="M:Charamaker2.Character.character.zbai(System.Single,System.Boolean)">
            <summary>
            zの大きさを定数倍する
            </summary>
            <param name="bai">倍率</param>
            <param name="setkijyun">基準にも同じ効果を適用するか</param>
        </member>
        <member name="M:Charamaker2.Character.character.resetmotion">
            <summary>
            モーションをすべて消す
            </summary>
        </member>
        <member name="M:Charamaker2.Character.character.endmotions(System.Single,System.Boolean)">
            <summary>
            終わっていないモーションを終わらせる
            </summary>
            <param name="power">終わらせるフレームの時間</param>
            <param name="bunkatu">フレームを分割するか</param>
            <returns>全て終わっていたらtrue</returns>
        </member>
        <member name="M:Charamaker2.Character.character.addmotion(Charamaker2.Character.motion,System.Boolean)">
            <summary>
            モーションを追加する
            </summary>
            <param name="m">追加するモーション</param>
            <param name="sento">最後に実行されるところに入れるか</param>
        </member>
        <member name="M:Charamaker2.Character.character.addmotion(Charamaker2.Character.moveman,System.Boolean)">
            <summary>
            ムーブを追加する。moveが一つの時だけ使ってね
            </summary>
            <param name="move">追加するムーブ。motionに直される</param>
            <param name="sento">最後に実行されるところに入れるか</param>
        </member>
        <member name="M:Charamaker2.Character.character.sinu(Charamaker2.hyojiman)">
            <summary>
            hyojimanから全てを消す
            </summary>
            <param name="hyojiman">消すhyojiman</param>
        </member>
        <member name="M:Charamaker2.Character.character.removemoves(System.Type)">
            <summary>
            特定のタイプのムーブを全てのモーションから消すE:
            </summary>
            <param name="t">消すmoveのタイプ</param>
        </member>
        <member name="M:Charamaker2.Character.character.clone">
            <summary>
            クローンするメソッド
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.character.ToSave">
            <summary>
            セーブする。セーブされるのは基準の方はセーブされない。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.character.ToLoad(Charamaker2.DataSaver)">
            <summary>
            ロードする。基準はロード時点のものがセットされる。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.camchara">
            <summary>
            カメラを自動的に追跡してくれるキャラクター。effectcharaのついてくキャラをこいつにして追跡する節をcoreにするといい感じ。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.camchara.#ctor(System.Single,System.Single,System.Single,Charamaker2.hyojiman)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="timer">持続時間</param>
            <param name="dx">coreのdx</param>
            <param name="dy">coreのdy</param>
            <param name="hyo">追跡する表示マン</param>
        </member>
        <member name="M:Charamaker2.Character.camchara.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.camchara.frame(System.Single)">
            <summary>
            フレーム処理
            </summary>
            <param name="cl">クロック</param>
        </member>
        <member name="T:Charamaker2.Character.effectchara">
            <summary>
            エッフェクト。フレーム処理はhyojiman側で行われる。
            </summary>
        </member>
        <member name="F:Charamaker2.Character.effectchara.time">
            <summary>
            残り生存時間
            </summary>
        </member>
        <member name="F:Charamaker2.Character.effectchara.on">
            <summary>
            くっつくキャラクター
            </summary>
        </member>
        <member name="F:Charamaker2.Character.effectchara.onsetu">
            <summary>
            くっつく節""でキャラクターそのものにくっつく
            </summary>
        </member>
        <member name="F:Charamaker2.Character.effectchara.hyojiman">
            <summary>
            自分を保持してるキャラクター
            </summary>
        </member>
        <member name="P:Charamaker2.Character.effectchara.sinderu">
            <summary>
            表示マン中に自分が存在していないフラグ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.effectchara.#ctor(Charamaker2.hyojiman,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,Charamaker2.Character.setu,Charamaker2.Character.character,System.String,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="hyo">追加する表示マン</param>
            <param name="timer">生存時間</param>
            <param name="xx">左上x座標</param>
            <param name="yy">左上y座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="ttx">中心x座標</param>
            <param name="tty">中心y座標</param>
            <param name="rrad">ラディアン角度</param>
            <param name="cor">核となる節</param>
            <param name="tuiteku">ついていくキャラクター。nullでついていかない</param>
            <param name="tuisetu">ついていく節の名前""でキャラクター本体</param>
            <param name="kaitenawaseru">このキャラクターの回転を合わせるか</param>
            <param name="addy">hyojimanにaddしてしまうか</param>
        </member>
        <member name="M:Charamaker2.Character.effectchara.add">
            <summary>
            表示マンに追加するメソッド
            </summary>
        </member>
        <member name="M:Charamaker2.Character.effectchara.#ctor(Charamaker2.Character.effectchara,System.Boolean,Charamaker2.hyojiman,System.Boolean,System.Boolean)">
            <summary>
            コピーするためのコンストラクタ
            </summary>
            <param name="eff">コピー元</param>
            <param name="addy">表示マンに追加するか</param>
            <param name="hyo">nullならコピー元の表示マンに</param>
            <param name="setkijyun">基準をコピーするか</param>
            <param name="motion">モーションをコピーするか</param>
        </member>
        <member name="M:Charamaker2.Character.effectchara.#ctor(Charamaker2.hyojiman,System.Single,Charamaker2.Character.character,Charamaker2.Character.character,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            キャラクターをエフェクトに変換するためのコンストラクタ
            </summary>
            <param name="hyo">追加する表示マン</param>
            <param name="timee">生存時間</param>
            <param name="c">素となるキャラクター</param>
            <param name="onn">ついていくキャラクター。nullでついていかない</param>
            <param name="tuisetu">ついていく節の名前""でキャラクター本体</param>
            <param name="kaitenawaseru">このキャラクターの回転を合わせるか</param>
            <param name="addy">hyojimanにaddしてしまうか</param>
            <param name="setkijyun">基準をコピーするか</param>
            <param name="motion">モーションをコピーするか</param>
        </member>
        <member name="M:Charamaker2.Character.effectchara.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.effectchara.frame(System.Single)">
            <summary>
            フレーム処理。表示マンが行ってくれる
            </summary>
            <param name="cl"></param>
        </member>
        <member name="M:Charamaker2.Character.effectchara.sinu(Charamaker2.hyojiman)">
            <summary>
            hyoujimanからも削除し、消えるためのメソッド
            </summary>
            <param name="hyojiman"></param>
        </member>
        <member name="T:Charamaker2.Character.haikeieff">
            <summary>
            エフェクトの背景版
            </summary>
        </member>
        <member name="M:Charamaker2.Character.haikeieff.#ctor(Charamaker2.hyojiman,System.Single,System.Single,System.Single,Charamaker2.Character.character,System.Boolean)">
            <summary>
            キャラクターを背景のエフェクトにするメソッド
            </summary>
            <param name="hyo">追加する表示マン</param>
            <param name="time">生存時間</param>
            <param name="scrolx">スクロール割合x</param>
            <param name="scroly">スクロール割合y</param>
            <param name="c">素となるキャラクター</param>
            <param name="addin">追加するか</param>
        </member>
        <member name="M:Charamaker2.Character.haikeieff.#ctor(Charamaker2.Character.haikeieff,System.Boolean,Charamaker2.hyojiman,System.Boolean,System.Boolean)">
            <summary>
            コピーするためのコンストラクタ
            </summary>
            <param name="eff">コピー元</param>
            <param name="addy">表示マンに追加するか</param>
            <param name="hyo">nullならコピー元の表示マンに</param>
            <param name="setkijyun">基準をコピーするか</param>
            <param name="motion">モーションをコピーするか</param>
        </member>
        <member name="M:Charamaker2.Character.haikeieff.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.haikeieff.addtohaikei(System.Single,System.Single,Charamaker2.hyojiman)">
            <summary>
            背景に追加するためのメソッド
            </summary>
            <param name="scrollx">スクロール割合x</param>
            <param name="scrolly">スクロール割合y</param>
            <param name="hyojiman">追加する表示マン</param>
        </member>
        <member name="M:Charamaker2.Character.haikeieff.sinuhaikei(Charamaker2.hyojiman)">
            <summary>
            sinuの背景版
            </summary>
            <param name="hyojiman">削除する表示マン</param>
        </member>
        <member name="T:Charamaker2.Character.serif">
            <summary>
            いい感じにセリフを表示するためのクラス。使うに堪えない
            </summary>
        </member>
        <member name="F:Charamaker2.Character.serif.m">
            <summary>
            セリフの中身
            </summary>
        </member>
        <member name="P:Charamaker2.Character.serif.TIMEA">
            <summary>
            メッセージの方のタイマー
            </summary>
        </member>
        <member name="F:Charamaker2.Character.serif.size">
            <summary>
            サイズと高さ
            </summary>
        </member>
        <member name="F:Charamaker2.Character.serif.takasa">
            <summary>
            サイズと高さ
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Charamaker2.Character.serif.#ctor(Charamaker2.hyojiman,System.Single,Charamaker2.Character.character,System.Int32,System.Single,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.Boolean)" -->
        <member name="M:Charamaker2.Character.serif.#ctor(Charamaker2.Character.serif,System.Boolean,Charamaker2.hyojiman,System.Boolean,System.Boolean)">
            <summary>
            コピーするためのコンストラクタ。フェードがうまくコピーできないかも
            </summary>
            <param name="eff">コピー元</param>
            <param name="addy">追加するか</param>
            <param name="hyo">追加する表示マン(nullならコピー元のを使う)</param>
            <param name="setkijyun">基準をコピーするか</param>
            <param name="motion">モーションをコピーするか</param>
        </member>
        <member name="M:Charamaker2.Character.serif.#ctor">
            <summary>
            カラコン
            </summary>
        </member>
        <member name="M:Charamaker2.Character.serif.frame(System.Single)">
            <summary>
            フレーム処理。文字に応じてウィンドウの幅を変えたり
            </summary>
            <param name="cl">クロック</param>
        </member>
        <member name="M:Charamaker2.Character.serif.SetSerif">
            <summary>
            セリフの座標とかをちゃんとセットする
            </summary>
        </member>
        <member name="T:Charamaker2.Character.motion">
            <summary>
            モーション。ムーブの頂点に君臨するクラス
            </summary>
        </member>
        <member name="F:Charamaker2.Character.motion.moves">
            <summary>
            ムーブのリスト
            </summary>
        </member>
        <member name="F:Charamaker2.Character.motion.idx">
            <summary>
            今読み込んでる位置と最後尾
            </summary>
        </member>
        <member name="F:Charamaker2.Character.motion.sidx">
            <summary>
            今読み込んでる位置と最後尾
            </summary>
        </member>
        <member name="F:Charamaker2.Character.motion.sp">
            <summary>
            モーションのスピード
            </summary>
        </member>
        <member name="F:Charamaker2.Character.motion.loop">
            <summary>
            trueにするとモーションが終了した後ループする
            </summary>
        </member>
        <member name="P:Charamaker2.Character.motion.owari">
            <summary>
            このモーションがすべて終了したか
            </summary>
        </member>
        <member name="M:Charamaker2.Character.motion.#ctor">
            <summary>
            普通の空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.motion.#ctor(Charamaker2.Character.moveman)">
            <summary>
            一個だけのmoveの時に便利なコンストラクタ
            </summary>
            <param name="mv">一番最初に追加するムーブ</param>
        </member>
        <member name="M:Charamaker2.Character.motion.#ctor(Charamaker2.Character.motion)">
            <summary>
            コピーするためのコンストラクタ
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Charamaker2.Character.motion.start(Charamaker2.Character.character)">
            <summary>
            モーションを始めるためのメソッド
            </summary>
            <param name="c">モーション適用対象</param>
        </member>
        <member name="M:Charamaker2.Character.motion.startAndFrame(Charamaker2.Character.character,System.Single)">
            <summary>
            モーションを始めるためのメソッド
            </summary>
            <param name="c">モーション適用対象</param>
        </member>
        <member name="M:Charamaker2.Character.motion.frame(Charamaker2.Character.character,System.Single,System.Boolean)">
            <summary>
            モーションを進める
            </summary>
            <param name="c">モーション適用対象</param>
            <param name="cl">時間のスピード</param>
            <param name="tanitu">falseならc.startmotion,endmotionを忘れずに</param>
        </member>
        <member name="M:Charamaker2.Character.motion.addmoves(Charamaker2.Character.moveman)">
            <summary>
            ムーブを追加する
            </summary>
            <param name="m">追加するムーブ</param>
        </member>
        <member name="M:Charamaker2.Character.motion.addmovesikkini(Charamaker2.Character.motion,System.Int32)">
            <summary>
            他のモーションの内容を一気に自分の最後尾に追加する
            </summary>
            <param name="m">そのモーション</param>
            <param name="kai">何度その操作を繰り返すか</param>
        </member>
        <member name="M:Charamaker2.Character.motion.removemoves(System.Type)">
            <summary>
            特定のタイプのムーブを全て消去する
            </summary>
            <param name="t">そのタイプ</param>
        </member>
        <member name="M:Charamaker2.Character.motion.getsuperstop(System.Single,System.Single)">
            <summary>
            現在のモーションが終了するまで止まるmovemanを手に入れる
            
            </summary>
            <param name="wari">最大の時間に対する割合</param>
            <param name="sp">待つ時間をsp倍にする</param>
        </member>
        <member name="P:Charamaker2.Character.motion.rawendtime">
            <summary>
            現在のモーションが完全に終了する時間(speedは考慮してない)
            </summary>
        </member>
        <member name="P:Charamaker2.Character.motion.endtime">
            <summary>
            現在のモーションが完全に終了する時間(speedは考慮してる)
            </summary>
        </member>
        <member name="M:Charamaker2.Character.motion.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.moveman">
            <summary>
            基底のムーブ。持ってる機能はモーションの読み込みを止めるだけ。
            </summary>
        </member>
        <member name="F:Charamaker2.Character.moveman.time">
            <summary>
            終わる時間
            </summary>
        </member>
        <member name="F:Charamaker2.Character.moveman.timer">
            <summary>
            現在の時間
            </summary>
        </member>
        <member name="F:Charamaker2.Character.moveman.st">
            <summary>
            モーションの読み込みを止めるか
            </summary>
        </member>
        <member name="P:Charamaker2.Character.moveman.owari">
            <summary>
            ムーブが終わってるか
            </summary>
        </member>
        <member name="P:Charamaker2.Character.moveman.STOP">
            <summary>
            モーションの読み込みを止めているか
            </summary>
        </member>
        <member name="M:Charamaker2.Character.moveman.getnokotime(System.Single,System.Single)">
            <summary>
            クロックしたときに残り時間をいい感じに取得する
            </summary>
            <param name="sp">今のスピード</param>
            <param name="from">残り時間の区切り。-1ならムーブが終わるとき</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Character.moveman.#ctor(System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">継続時間</param>
            <param name="stop">読み込みを止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.moveman.#ctor(Charamaker2.Character.moveman)">
            <summary>
            コピーするためのコンストラクタ。必ず自分のタイプ一つの引数で！
            </summary>
            <param name="m">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.moveman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.moveman.start(Charamaker2.Character.character)">
            <summary>
            ムーブを開始する。
            </summary>
            <param name="c">対象のキャラクター</param>
        </member>
        <member name="M:Charamaker2.Character.moveman.frame(Charamaker2.Character.character,System.Single)">
            <summary>
            フレーム処理
            </summary>
            <param name="c">対象</param>
            <param name="cl">クロックスピード</param>
        </member>
        <member name="M:Charamaker2.Character.moveman.hukkyuu(Charamaker2.Character.character)">
            <summary>
            コピーした後に復旧する奴
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:Charamaker2.Character.moveman.startAndFrame(Charamaker2.Character.character,System.Single)">
            <summary>
            即座にムーブを適用する
            </summary>
            <param name="c">適用するキャラクター</param>
            <param name="cl">フレームする時間</param>
        </member>
        <member name="M:Charamaker2.Character.moveman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.idouman">
            <summary>
            キャラクターを移動指せるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.idouman.#ctor(System.Single,System.Single,System.Single,System.Double,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="vvx">移動速度x</param>
            <param name="vvy">移動速度y</param>
            <param name="vvsita">回転速度(°)</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.idouman.#ctor(Charamaker2.Character.idouman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="i">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.idouman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.idouman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.zureman">
            <summary>
            回転角度とキャラクターの大きさを考慮して移動するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zureman.#ctor(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="wariaiw">移動速度xのwに対する割合</param>
            <param name="wariaih">移動速度yのhに対する割合</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.zureman.#ctor(Charamaker2.Character.zureman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="i">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.zureman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zureman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.zahyosetman">
            <summary>
            なにがなんでも座標を固定するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zahyosetman.#ctor(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="xx">固定するx座標</param>
            <param name="yy">固定するy座標</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.zahyosetman.#ctor(Charamaker2.Character.zahyosetman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="i">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.zahyosetman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zahyosetman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.setuidouman">
            <summary>
            関節を移動、回転させるためのムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setuidouman.#ctor(System.Single,System.String,System.Double,System.Single,System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="name">対象の節</param>
            <param name="vvsita">回転速度</param>
            <param name="vvdx">移動速度x</param>
            <param name="vvdy">移動速度y</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.setuidouman.#ctor(Charamaker2.Character.setuidouman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.setuidouman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setuidouman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.setumageman">
            <summary>
            関節を指定した角度に曲げるためのムーブ。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setumageman.#ctor(System.Single,System.String,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="name">対象の節</param>
            <param name="sitato">曲げたい角度(°)</param>
            <param name="sitasp">回転速度(°)</param>
            <param name="saitan">最短経路で回るか</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.setumageman.#ctor(Charamaker2.Character.setumageman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.setumageman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.setumageman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.radtoman">
            <summary>
            指定した節、キャラクターの角度を絶対的に決めて回転させるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.radtoman.#ctor(System.Single,System.String,System.Double,System.Double,System.Boolean,System.Boolean,System.Single)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">継続時間</param>
            <param name="name">対象の節""でキャラクターを対象にする</param>
            <param name="sitato">辺か先の絶対的な角度(°)</param>
            <param name="sitasp">回転速度(°)</param>
            <param name="saitan">最短経路で回転するか</param>
            <param name="stop">止める</param>
            <param name="superkijyun">この角度を基準(0度)として回す471で機能オフ</param>
        </member>
        <member name="M:Charamaker2.Character.radtoman.#ctor(Charamaker2.Character.radtoman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="r">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.radtoman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.radtoman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.texpropman">
            <summary>
            テクスチャーの反転、不透明度を操るムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.texpropman.#ctor(System.Single,System.String,System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="name">対象にする節""ですべてを指定する</param>
            <param name="mirhow">0で反転、1で正方向,-1で負に、471で何もしない</param>
            <param name="toopa">-1で変更なし、スタートした瞬間の不透明度から速度を自動的に決める。</param>
            <param name="kozokumo">下の節にも同じ効果を適用するか。falseかつ""でキャラクターのmirrorを変更できる</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.texpropman.#ctor(Charamaker2.Character.texpropman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="t">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.texpropman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.texpropman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.Kopaman">
            <summary>
            テクスチャーの不透明度を操るムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kopaman.#ctor(System.Single,System.String,System.Single,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="name">対象にする節""ですべてを指定する</param>
            <param name="toopabai">-1で変更なし、基準の不透明度から速度を自動的に決める。</param>
            <param name="kozokumo">下の節にも同じ効果を適用するか。</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.Kopaman.#ctor(Charamaker2.Character.Kopaman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="t">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.Kopaman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kopaman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.texchangeman">
            <summary>
            テクスチャーを瞬時に変更するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.texchangeman.#ctor(System.String,System.String)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="name">対象にする節</param>
            <param name="texname">変更するテクスチャー</param>
        </member>
        <member name="M:Charamaker2.Character.texchangeman.#ctor(Charamaker2.Character.texchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="t">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.texchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.texchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.zchangeman">
            <summary>
            zを即座に変更するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zchangeman.#ctor(System.Single,System.String,System.Single,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">ストップのためだけの持続時間</param>
            <param name="name">対象になる節</param>
            <param name="ddz">変更するzの幅(定数)</param>
            <param name="kouzokumo">下の節にも同じ効果を適用するか</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.zchangeman.#ctor(Charamaker2.Character.zchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="z">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.zchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.Kzchangeman">
            <summary>
            基準をもとにzを即座に変更するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kzchangeman.#ctor(System.String,System.String,System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="name">対象の節</param>
            <param name="toname">基準の節の名前</param>
            <param name="dz">基準の節から定数で更に移動する</param>
            <param name="kouzokumo">最終的な移動を下の節にも適用するか</param>
        </member>
        <member name="M:Charamaker2.Character.Kzchangeman.#ctor(Charamaker2.Character.Kzchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="z">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.Kzchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kzchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.sizetokaman">
            <summary>
            サイズと中心点を移動するように変化させるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.sizetokaman.#ctor(System.Single,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="t">持続時間</param>
            <param name="name">対象の節</param>
            <param name="vtx">中心点xの変化速度</param>
            <param name="vty">中心点yの変化速度</param>
            <param name="vw">幅の変化速度</param>
            <param name="vh">高さの変化速度</param>
            <param name="stop"></param>
        </member>
        <member name="M:Charamaker2.Character.sizetokaman.#ctor(Charamaker2.Character.sizetokaman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.sizetokaman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.sizetokaman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.scalechangeman">
            <summary>
            節やキャラクターの大きさを一時的に大きくするムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.scalechangeman.#ctor(System.Single,System.Single,System.String,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
             普通のコンストラクタ
            </summary>
            <param name="t">膨張/縮小時間</param>
            <param name="middletime">中間の時間(-1で縮小しない)</param>
            <param name="name">対象となる節(""でキャラクター)</param>
            <param name="changescalex">幅方向のスケール</param>
            <param name="changescaley">高さ方向のスケール</param>
            <param name="kouzokumo">下の節にも同じ割合の効果を適用するか</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.scalechangeman.#ctor(Charamaker2.Character.scalechangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.scalechangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.scalechangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.tyusinchangeman">
            <summary>
            中心点を一時的にずらすムーブ
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Charamaker2.Character.tyusinchangeman.#ctor(System.Single,System.Single,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean)" -->
        <member name="M:Charamaker2.Character.tyusinchangeman.#ctor(Charamaker2.Character.tyusinchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.tyusinchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.tyusinchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.dxchangeman">
            <summary>
            節の相対位置を一時的に変えるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.dxchangeman.#ctor(System.Single,System.Single,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="t">変更、戻り時間</param>
            <param name="middletime">中間の時間(-1で戻らない)</param>
            <param name="name">対象の節</param>
            <param name="todx">親の大きさに対するdxの変化幅の割合</param>
            <param name="Ynisuru">Y方向に適用する</param>
            <param name="addsitei">現在のdx空追加するように変化させる</param>
            <param name="stop">止める</param>
        </member>
        <member name="M:Charamaker2.Character.dxchangeman.#ctor(Charamaker2.Character.dxchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.dxchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.dxchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.Kscalechangeman">
            <summary>
            基準を元に大きさを変えるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kscalechangeman.#ctor(System.Single,System.String,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="t">変更時間</param>
            <param name="name">対象となる節(""でキャラクター自身)</param>
            <param name="changescalex">幅方向の割合</param>
            <param name="changescaley">高さ方向の割合</param>
            <param name="mode">0で両方変更,1でwのみ,-1でhのみ</param>
            <param name="addin">現在の中心点から追加するように変化させる</param>
            <param name="kouzokumo">後続にも同じ割合で効果を適用するか</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.Kscalechangeman.#ctor(Charamaker2.Character.Kscalechangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.Kscalechangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kscalechangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.Ktyusinchangeman">
            <summary>
            基準をもとに中心の位置を変えるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Ktyusinchangeman.#ctor(System.Single,System.String,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="t">変化時間</param>
            <param name="name">対象となる節(""でキャラクター)</param>
            <param name="changescalex">基準の幅に対する変化xの割合</param>
            <param name="changescaley">基準の高さに対する変化yの割合</param>
            <param name="mode">0で両方、1でxのみ,-1でyのみ変更</param>
            <param name="addin">現在の中心点から追加するように変化させる</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.Ktyusinchangeman.#ctor(Charamaker2.Character.Ktyusinchangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.Ktyusinchangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Ktyusinchangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.Kdxychangeman">
            <summary>
            基準をもとに関節の位置を変更するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kdxychangeman.#ctor(System.Single,System.String,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="t">変化時間</param>
            <param name="name">対象となる節(""でキャラクター)</param>
            <param name="changescalex">基準の親の幅に対する変化xの割合</param>
            <param name="changescaley">基準の親の高さに対する変化yの割合</param>
            <param name="mode">0で両方、1でxのみ,-1でyのみ変更</param>
            <param name="addin">現在の中心点から突かするように変化させる</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.Kdxychangeman.#ctor(Charamaker2.Character.Kdxychangeman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.Kdxychangeman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.Kdxychangeman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.yureman">
            <summary>
            節やキャラクターを揺れさせるムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.yureman.#ctor(System.Int32,System.Single,System.Single,System.Single,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="kaisuu">揺れる回数</param>
            <param name="speed">回転速度(°)</param>
            <param name="kakudo">揺れる方向</param>
            <param name="haban">揺れる幅</param>
            <param name="tai">揺れる対象(""でキャラクター)</param>
            <param name="izonnu">揺れる幅を定数から大きさ依存にする</param>
            <param name="soutaikaku">揺れる方向を相対角にする</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.yureman.#ctor(Charamaker2.Character.yureman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="y">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.yureman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.yureman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.zkaitenman">
            <summary>
            回転するかのように大きさを変えるムーブ。
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zkaitenman.#ctor(System.Single,System.String,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="time">変化時間</param>
            <param name="name">対象の節</param>
            <param name="strsita">現在の想定される角度</param>
            <param name="endsita">変化後の角度</param>
            <param name="mode">0でwh両方,1でwのみ,-1でhのみ回転させる</param>
            <param name="kouzoku">後続にも同じ効果を適用するか</param>
            <param name="stop">止めるか</param>
        </member>
        <member name="M:Charamaker2.Character.zkaitenman.#ctor(Charamaker2.Character.zkaitenman)">
            <summary>
            コーピーするコンストラクタ
            </summary>
            <param name="z">^^</param>
        </member>
        <member name="M:Charamaker2.Character.zkaitenman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.zkaitenman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.hantenkaitenman">
            <summary>
            反転したときの角度に回転するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.hantenkaitenman.#ctor(System.Single,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="time">変化時間</param>
            <param name="name">対象</param>
            <param name="mode">回転する方向,1で正,-1で負,0で自動</param>
            <param name="stop">とめるか</param>
        </member>
        <member name="M:Charamaker2.Character.hantenkaitenman.#ctor(Charamaker2.Character.hantenkaitenman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="h">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.hantenkaitenman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.hantenkaitenman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.stopaman">
            <summary>
            全ての回転を止めるムーブ。直接使わない
            </summary>
        </member>
        <member name="M:Charamaker2.Character.stopaman.#ctor(Charamaker2.Character.stopaman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.stopaman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.stopaman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.stopaaddman">
            <summary>
            全ての回転を止めるムーブやつを扱うムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.stopaaddman.#ctor(System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="t">回転を止める時間</param>
            <param name="stop">...</param>
        </member>
        <member name="M:Charamaker2.Character.stopaaddman.#ctor(Charamaker2.Character.stopaaddman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.stopaaddman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.stopaaddman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.playotoman">
            <summary>
            filemanから音を発するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.playotoman.#ctor(System.String,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name">音のパス</param>
            <param name="volume">ボリューム(0より小さいときbgmでぶつ切りする)</param>
            <param name="BGM">bgmか</param>
        </member>
        <member name="M:Charamaker2.Character.playotoman.#ctor(Charamaker2.Character.playotoman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.playotoman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.playotoman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.refreshman">
            <summary>
            キャラクターをリフレッシュするムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.refreshman.#ctor(System.Single)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="timer">STOP時間</param>
        </member>
        <member name="M:Charamaker2.Character.refreshman.#ctor(Charamaker2.Character.refreshman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.refreshman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.refreshman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Character.pplayotoman">
            <summary>
            表示マンから音を発するムーブ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.pplayotoman.#ctor(Charamaker2.hyojiman,System.String,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="h">音を発する表示マン</param>
            <param name="name">音のパス</param>
            <param name="volume">ボリューム(0より小さいときbgmでぶつ切りする)</param>
            <param name="BGM">bgmか</param>
        </member>
        <member name="M:Charamaker2.Character.pplayotoman.#ctor(Charamaker2.Character.pplayotoman)">
            <summary>
            コピーするためのコンストラクタ。
            </summary>
            <param name="s">コピー元</param>
        </member>
        <member name="M:Charamaker2.Character.pplayotoman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.Character.pplayotoman.ToSave">
            <summary>
            セーブできる形態に変えます
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.DataSaver">
            <summary>
            [name]{naiyou}をロードするクラス。
            [name]{naiyou2}
            って感じで二つ並んでたら基本上しか読み取れない。
            元々セーブデータ用だしね。
            [name]の方は別に保存されてない
            []がディレクトリで{}が中に書いてあるファイルorディレクトリのイメージ。
            </summary>
        </member>
        <member name="M:Charamaker2.DataSaver.linechange(System.Int32)">
            <summary>
            最後の所に改行を追加する
            </summary>
        </member>
        <member name="M:Charamaker2.DataSaver.indent(System.Int32)">
            <summary>
            全体をインデントする
            </summary>
        </member>
        <member name="M:Charamaker2.DataSaver.escapen(System.String)">
            <summary>
            改行->消す。
            \n->改行。
            に変換する
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.escaped">
            <summary>
            データをエスケープする。データを読み取る前に一回行ってね
            改行->消す。
            \n->改行。
            に変換する
            </summary>
            <param name="s"></param>
            <returns>そのまま自分を返す。便利なだけ</returns>
        </member>
        <member name="M:Charamaker2.DataSaver.getData">
            <summary>
            書いてある内容をもらう。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.loadFromPath(System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="escape">読み込んだ奴をエスケープするか</param>
            <param name="ext">拡張子</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.saveToPath(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="ext">拡張子</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.packAdd(System.String,System.String,System.Boolean)">
            <summary>
            今のデータに新しいパックを追加する
            </summary>
            <param name="name"></param>
            <param name="data"></param>
            <param name="kaigyo"></param>
        </member>
        <member name="M:Charamaker2.DataSaver.packAdd(System.String,Charamaker2.DataSaver,System.Boolean)">
            <summary>
            こっちのバージョンもある
            </summary>
            <param name="name"></param>
            <param name="d"></param>
            <param name="kaigyo"></param>
        </member>
        <member name="M:Charamaker2.DataSaver.packAdd(System.String,System.Boolean,System.Boolean)">
            <summary>
            こっちのバージョンもある
            </summary>
            <param name="name"></param>
            <param name="d"></param>
            <param name="kaigyo"></param>
        </member>
        <member name="M:Charamaker2.DataSaver.packAdd``1(System.String,``0,System.Boolean)">
            <summary>
            こっちのバージョンもある
            </summary>
            <param name="name"></param>
            <param name="d"></param>
            <param name="kaigyo"></param>
        </member>
        <member name="M:Charamaker2.DataSaver.unPackDataS(System.String,System.String)">
            <summary>
            データの中にパックがある前提ね。文字にアンパックする
            </summary>
            <param name="name">対象</param>
            <param name="nothing">もし中身がなかった時に返す値</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.unPackDataD(System.String)">
            <summary>
            Datasaverにアンパックする
            最初にロードするときだけescape=trueにする。
            </summary>
            <param name="name">対象</param>
            <param name="escape">\nとかを変換するか</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.unPackDataF(System.String,System.Single)">
            <summary>
            floatでアンパックする
            
            </summary>
            <param name="name"></param>
            <param name="Nan">もし中身がなかった時の返す値</param>
            <param name="escape">\nとかを変換するかどうか</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.unPackDataB(System.String,System.Boolean)">
            <summary>
            boolでアンパックする
            
            </summary>
            <param name="name"></param>
            <param name="Nan">もし中身がなかった時の返す値</param>
            <param name="escape">\nとかを変換するかどうか</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.unpackAlldataS">
            <summary>
            全てのデータをアンパックする。
            初めてアンパックするときだけescape=trueに
            </summary>
            <param name="escape">\nとかを変換</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.unpackAlldataD">
            <summary>
            全てのデータをアンパックする。
            初めてアンパックするときだけescape=trueに
            </summary>
            <param name="escape">\nとかを変換</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.getAllPacks">
            <summary>
            全てのパックを取得する
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.splitData(System.Char)">
            <summary>
            データを特定の文字で区切って変換する
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.splitData2(System.Char)">
            <summary>
            データを特定の文字で区切って変換する
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.splitOneData(System.Int32,System.String,System.Char)">
            <summary>
            データを特定の文字で区切ったのち、idx番目を変換する
            </summary>
            <param name="c"></param>
            <param name="def">idx番目が存在しなかった時の戻り値</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.splitOneData2(System.Int32,System.Single,System.Char)">
            <summary>
            データを特定の文字で区切ったのち、idx番目を変換する
            </summary>
            <param name="c"></param>
            <param name="def">idx番目が存在しなかった時の戻り値</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.DataSaver.getAllkouzou(System.Int32)">
            <summary>
            データのすべての構造を取得する。多分呼び出すのは一番上でなのでescape=trueがいいな。
            </summary>
            <param name="escape">\nとかを変換するか</param>
            <param name="indent">0でいいよ</param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.rendercontainer">
            <summary>
            レンダーターゲットを管理するためのクラス
            </summary>
        </member>
        <member name="P:Charamaker2.rendercontainer.isWindow">
            <summary>
            ウィンドウに根差したやつか
            </summary>
        </member>
        <member name="P:Charamaker2.rendercontainer.isBitmap">
            <summary>
            ビットマップに根差したやつか
            </summary>
        </member>
        <member name="M:Charamaker2.rendercontainer.#ctor(Vortice.Direct2D1.ID2D1RenderTarget,Vortice.Direct2D1.ID2D1RenderTarget,System.String)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="moto"></param>
            <param name="render"></param>
            <param name="name"></param>
        </member>
        <member name="M:Charamaker2.renderList.getRender(Vortice.Direct2D1.ID2D1RenderTarget,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            ビットマップをもらう
            </summary>
            <param name="moto">製造元となったレンダー</param>
            <param name="name"></param>
            <param name="w">-1ならフリー</param>
            <param name="h"></param>
            <param name="window">trueならウィンドウfalseならbitmap</param>
            <returns>ないならnull</returns>
        </member>
        <member name="M:Charamaker2.renderList.addRender(Vortice.Direct2D1.ID2D1RenderTarget,Vortice.Direct2D1.ID2D1RenderTarget,System.String)">
            <summary>
            
            </summary>
            <param name="moto">製造元となったレンダー</param>
            <param name="render"></param>
            <param name="name"></param>
        </member>
        <member name="M:Charamaker2.renderList.removeRender(Vortice.Direct2D1.ID2D1RenderTarget)">
            <summary>
            
            </summary>
            <param name="render">製造元から根こそぎ持ってくよ</param>
        </member>
        <member name="T:Charamaker2.fileman">
            <summary>
            ファイルの入出力・このシステムのセットアップを扱うクラス。
            setingupingでセットアップは完了する。
            character,motion,tex,oto,oto\bgmというフォルダがexeファイルと同じディレクトリに必要。
            movie機能を使うならmovieというフォルダがexeと同じところに必要。
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.fac">
            <summary>
            なんとなく保存してるファクトリ
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.rendertargets">
            <summary>
            もちろん保存しないといけないレンダーターゲット
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.gasyu">
            <summary>
            ガシーツ
            </summary>
        </member>
        <member name="F:Charamaker2.fileman._CC">
            <summary>
            セットアップされたフォーム
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.nothing">
            <summary>
            何もないことを示す魔法の言葉
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.resizen(System.Single,System.IntPtr,System.Single,System.Single)">
            <summary>
            画面のサイズを設定し、hyojimanを生成可能にする。
            </summary>
            <param name="bairitu">画質の倍率</param>
            <param name="Hand">ハンドラー</param>
            <param name="wi">画面の幅</param>
            <param name="hei">画面の高さ</param>
        </member>
        <member name="M:Charamaker2.fileman.makehyojiman(System.Int32)">
            <summary>
            hyojimanを取得する
            </summary>
            <param name="numberoftarget">何番目の画面か</param>
            <returns>新しいhyojiman</returns>
        </member>
        <member name="M:Charamaker2.fileman.getBitmapRender(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
                bmprenderをがっちゃする
            </summary>
            <param name="name">""でウィンドウの。あとはbitmapに</param>
            <param name="w">幅(-1で自動)</param>
            <param name="h">高さ(-1で自動)</param>
            <param name="numberoftarget">何番目の画面か</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.getBitmapRender(Vortice.Direct2D1.ID2D1RenderTarget,System.String,System.Int32,System.Int32)">
            <summary>
                bmprenderをがっちゃする
            </summary>
            <param name="name">""でウィンドウのあとはbitmapに</param>
            <param name="w">幅(-1で自動)</param>
            <param name="h">高さ(-1で自動)</param>
            <param name="number">番号の代わりに直接レンダー</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.makePhyojiman(System.String,System.Boolean,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            ピクチャーとして扱えるPhyojimanを取得する
            </summary>
            <param name="tex">ピクチャーのテクスチャ</param>
            <param name="name">""でウィンドウのあとはbitmapに</param>
            <param name="w">幅(-1で自動)</param>
            <param name="h">高さ(-1で自動)</param>
            <param name="numberoftarget">何番目の画面か</param>
            <param name="auto">Phuojimanを自動的にhyojiをするか</param>
            <returns>新しいhyojiman</returns>
        </member>
        <member name="M:Charamaker2.fileman.setinguping(System.Windows.Forms.ContainerControl,System.Single,System.Single,System.Single)">
            <summary>
            セットアップをする。
            画像の表示、音の再生が使用可能になる。
            </summary>
            <param name="f">素となるフォームとかユーザーコントロール</param>
            <param name="risouw">理想のクライアントサイズ</param>
            <param name="risouh">理想のクライアントサイズ</param>
            <param name="bai">画質の倍率</param>
        </member>
        <member name="M:Charamaker2.fileman.setNewWindow(System.Windows.Forms.ContainerControl,System.Single)">
            <summary>
            新しいウィンドウに対して画面を操れるようにする。
            </summary>
            <param name="f">素となるフォームとかユーザーコントロール</param>
            <param name="bai">画質の倍率</param>
        </member>
        <member name="M:Charamaker2.fileman.deleteOldWindow(System.Windows.Forms.ContainerControl)">
            <summary>
            ウィンドウを消したいな
            </summary>
            <param name="f">消したいウィンドウ</param>
        </member>
        <member name="F:Charamaker2.fileman.texs">
            <summary>
            読み込んだテクスチャーを保存しとく
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.motions">
            <summary>
            読み込んだモーションを保存しとく
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.characters">
            <summary>
            読み込んだキャラクターを保存しとく
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.resetcharacters">
            <summary>
            読み込まれたキャラクターをアンロード。表情を追加したときとかに！
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.resetmotions">
            <summary>
            読み込まれたモーションをリセット
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.resettextures">
            <summary>
            読み込まれたテクスチャーをリセット
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.otos">
            <summary>
            読み込んだ音を保存しとく
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.oton">
            <summary>
            今ならしている音を保存しとく。ちゃんとメモリ開放できるように。
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.r">
            <summary>
            乱数ロット
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.screenShot(Charamaker2.hyojiman,System.String,System.String)">
            <summary>
            画面のスクリーンショットを取る。effectcharaがぶれるバグあり！
            </summary>
            <param name="h">保存する表示マン</param>
            <param name="format">保存フォーマット</param>
            <param name="addname">追加で付ける名前</param>
        </member>
        <member name="M:Charamaker2.fileman.settextobit(System.String,System.Drawing.Color)">
            <summary>
            texsに色のついたビットを追加する。
            </summary>
            <param name="bitname">bitname+"bit"</param>
            <param name="color">色</param>
        </member>
        <member name="F:Charamaker2.fileman.clmcol">
            <summary>
            ビットマップを読み込むときに使うクロマキーの色
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.gettexsize(System.String)">
            <summary>
            テクスチャーのサイズを取得する
            </summary>
            <param name="file">そのテクスチャー</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.GetPixels(System.String)">
            <summary>
            テクスチャの色を取得する。透過色はA=0;
             毎回ロードするし、多分重い。redBitとかは無理というかする必要なくね
            </summary>
            <param name="file">ファイル</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.ldtex(System.String,System.Boolean)">
            <summary>
            bitmapテクスチャーを読み込む。既に読み込んでいた場合は読み込まずに返す。
            .bmpはつけてもつけなくてもいい
            </summary>
            <param name="file">.\tex\に続くファイルパス</param>
            <param name="reset">強制的に再読み込みする</param>
            <returns>clmcolを透明にしたビットマップ</returns>
        </member>
        <member name="M:Charamaker2.fileman.slashformat(System.String)">
            <summary>
            スラッシュをバックスラッシュに変換する。
            だってモーションとかの登録を入力パッスにしてるからさ、
            \/が混じってると二回ロードしちゃうんだよな
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.nonbackslash(System.String)">
            <summary>
            バックスラッシュをスラッシュに変換する。
            これでfolder\nantokaが勘違いされなくなる
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.dotset(System.String)">
            <summary>
            .bmpをつける。.pngならそのまま
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.regestBmp(System.String,Vortice.Direct2D1.ID2D1Bitmap,System.Boolean)">
            <summary>
            bmpをtexsに登録する
            </summary>
            <param name="name"></param>
            <param name="bmp"></param>
            <param name="dispouwagaki">同じ名前のbmpを登録するときdisposeするか。Renderからのbmpを登録してる場所にはfalseじゃないとだめ</param>
        </member>
        <member name="M:Charamaker2.fileman.savecharacter(Charamaker2.Character.character)">
            <summary>
            作成したキャラクターをダイアログから保存する。拡張子は.c2cにしなよ
            </summary>
            <param name="c">保存するキャラクター</param>
        </member>
        <member name="M:Charamaker2.fileman.savecharacter(System.String,Charamaker2.Character.character)">
            <summary>
            作成したキャラクターをダイアログから保存する。拡張子は.c2cにしなよ
            </summary>
            <param name="path">保存するパス</param>
            <param name="c">保存するキャラクター</param>
        </member>
        <member name="M:Charamaker2.fileman.loadcharacter(System.Boolean)">
            <summary>
            キャラクターをダイアログからロードする。.c2cとか関係なくロードできるのかな？
            </summary>
            <param name="reset">既にロードしていた場合もロードし直す</param>
            <returns>ロードしたキャラクター</returns>
        </member>
        <member name="M:Charamaker2.fileman.loadcharacter(System.String,System.Single,System.Boolean)">
            <summary>
            作成したキャラクターをロードする。
            </summary>
            <param name="file">.\character\*.c2cの*部分.c2cは書いてもいいし</param>
            <param name="scale">キャラクターのスケール</param>
            <param name="reset">再ロードする</param>
            <returns>ロードしたキャラクター</returns>
            
        </member>
        <member name="M:Charamaker2.fileman.savemotion(System.String,Charamaker2.Character.motion)">
            <summary>
            作成したモーションをスクリプトと合わせてセーブする。拡張子は.c2mにしなよ
            </summary>
            <param name="s">モーションを作ったスクリプト</param>
            <param name="m">モーション本体</param>
        </member>
        <member name="M:Charamaker2.fileman.savemotion(System.String,System.String,Charamaker2.Character.motion)">
            <summary>
            作成したモーションをスクリプトと合わせてセーブする。拡張子は.c2mにしなよ
            </summary>
            <param name="path">保存するパス</param>
            <param name="s">モーションを作ったスクリプト</param>
            <param name="m">モーション本体</param>
        </member>
        <member name="M:Charamaker2.fileman.savemotion3(System.String,Charamaker2.Character.motion)">
            <summary>
            作成したモーションをスクリプトと合わせてセーブする。拡張子は.c3mにしなよ
            </summary>
            <param name="s">モーションを作ったスクリプト</param>
            <param name="m">モーション本体</param>
        </member>
        <member name="M:Charamaker2.fileman.savemotion3(System.String,System.String,Charamaker2.Character.motion,System.String)">
            <summary>
            作成したモーションをスクリプトと合わせてセーブする。拡張子は.c3mにしなよ
            </summary>
            <param name="file">ファイルの名前</param>
            <param name="path">保存するパス</param>
            <param name="s">モーションを作ったスクリプト</param>
            <param name="m">モーション本体</param>
        </member>
        <member name="M:Charamaker2.fileman.loadmotion(System.Boolean)">
            <summary>
            モーションをダイアログからロードする。
            </summary>
            <param name="reset">ロードされている場合も再度ロードする</param>
            <returns>ロードしたモーション</returns>
        </member>
        <member name="M:Charamaker2.fileman.ldmotion(System.String,System.Single,System.Boolean)">
            <summary>
            モーションファイル(.c2m)をロードし、モーション部分を返す。.c2mは書いても書かなくてもよい
            </summary>
            <param name="file">.\motion\に続くパス</param>
            <param name="sp">モーションのスピード</param>
            <param name="reset">再ロードする</param>
            <returns>ロードしたモーション</returns>
        </member>
        <member name="M:Charamaker2.fileman.loadmotion(System.String,System.Single,System.Boolean)">
            <summary>
            モーションファイル(.c2m)をロードしそのまま返す。モーションの編集するならこっち。
            </summary>
            <param name="file">.\motion\に続くパス.c2mは書かなくてよい</param>
            <param name="sp">モーションのスピード</param>
            <param name="reset">再ロードする</param>
            <returns>ロードしたモーションファイル</returns>
        </member>
        <member name="M:Charamaker2.fileman.loadmotion3(System.Boolean)">
            <summary>
            モーションをダイアログからロードする。
            </summary>
            <param name="reset">ロードされている場合も再度ロードする</param>
            <returns>ロードしたモーション</returns>
        </member>
        <member name="M:Charamaker2.fileman.ldmotion3(System.String,System.Single,System.Boolean)">
            <summary>
            モーションファイル(.c2m)をロードし、モーション部分を返す。.c2mは書いても書かなくてもよい
            </summary>
            <param name="file">.\motion\に続くパス</param>
            <param name="sp">モーションのスピード</param>
            <param name="reset">再ロードする</param>
            <returns>ロードしたモーション</returns>
        </member>
        <member name="M:Charamaker2.fileman.loadmotion3(System.String,System.Single,System.Boolean,System.String)">
            <summary>
            モーションファイル(.c2m)をロードしそのまま返す。モーションの編集するならこっち。
            </summary>
            <param name="file">.\motion\に続くパス.c2mは書かなくてよい</param>
            <param name="sp">モーションのスピード</param>
            <param name="reset">再ロードする</param>
            <returns>ロードしたモーションファイル</returns>
        </member>
        <member name="M:Charamaker2.fileman.loadcharacter3(System.Boolean)">
            <summary>
            キャラクターをダイアログからロードする。.c2cとか関係なくロードできるのかな？
            </summary>
            <param name="reset">既にロードしていた場合もロードし直す</param>
            <returns>ロードしたキャラクター</returns>
        </member>
        <member name="M:Charamaker2.fileman.savecharacter3(Charamaker2.Character.character)">
            <summary>
            ダイアログからセーブ
            </summary>
            <param name="c">基準がセーブされる</param>
        </member>
        <member name="M:Charamaker2.fileman.savecharacter3(System.String,Charamaker2.Character.character,System.String)">
            <summary>
            キャラクターをセーブ。拡張子はc3cになる。
            </summary>
            <param name="file"></param>
            <param name="c">基準がセーブされる</param>
        </member>
        <member name="M:Charamaker2.fileman.loadcharacter3(System.String,System.Single,System.Boolean,System.String)">
            <summary>
            作成したキャラクターをロードする。ロードするのは基準だけ
            </summary>
            <param name="file">.\character\*.c2cの*部分.c2cは書いてもいいし</param>
            <param name="scale">キャラクターのスケール</param>
            <param name="reset">再ロードする</param>
            <param name="path">既定のパス</param>
            <returns>ロードしたキャラクター</returns>
        </member>
        <member name="P:Charamaker2.fileman.glovol">
            <summary>
            グローバルボリューム。0＜＝＜＝1
            </summary>
        </member>
        <member name="P:Charamaker2.fileman.glovolkou">
            <summary>
            効果音のボリューム。0＜＝＜＝1
            </summary>
        </member>
        <member name="P:Charamaker2.fileman.glovolbgm">
            <summary>
            bgmのボリューム。0＜＝＜＝1
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.loadoto(System.String)">
            <summary>
            音をロードする。ロードするだけ
            </summary>
            <param name="file">.\oto\*.wavの*部分</param>
        </member>
        <member name="M:Charamaker2.fileman.playoto(System.String,System.Single)">
            <summary>
            効果音を鳴らす
            </summary>
            <param name="file">.\oto\*.wavの*部分</param>
            <param name="vol">この音のボリューム</param>
        </member>
        <member name="F:Charamaker2.fileman.maxoto">
            <summary>
            同時にならすことのできる音の数
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.maxsameoto">
            <summary>
            同時にならすことのできる同じ音の数.今はマジで意味ない
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.stopbgm">
            <summary>
            bgmを止めるためのbgm
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.playbgm(System.String,System.Boolean)">
            <summary>
            bgmを流す。bgmは一つしか流せない
            </summary>
            <param name="file">.\oto\bgm\*.wavの*部分。stopbgmとすることで無音にできる</param>
            <param name="butu">おなじbgmを流したときに最初から再生するか</param>
        </member>
        <member name="F:Charamaker2.fileman.audio">
            <summary>
            audioのあれ
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.MV">
            <summary>
            音を合成したときの奴を表す奴
            </summary>
        </member>
        <member name="F:Charamaker2.fileman.basebitnames">
            <summary>
            基本的なビットのあれよ。名前とか
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.setrandomseed">
            <summary>
            ランダム変数に現在時刻をシードであれする
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.resetfileman(System.IntPtr)">
            <summary>
            ファイルマンを初期化する
            </summary>
            <param name="hand"></param>
        </member>
        <member name="M:Charamaker2.fileman.loadmovie(System.String)">
            <summary>
            ムービーをつくるスクリプトをロードする。使うならmovieというフォルダがexeと同じところに必要
            </summary>
            <param name="file">.\movie\*.txtの*部分</param>
            <returns>ロードしたムービー</returns>
        </member>
        <member name="F:Charamaker2.fileman.loading">
            <summary>
            loadfiketokaの時に呼び出されるイベント。
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.loadfiletoka">
            <summary>
            tex,oto,character,motionフォルダにあるアイテムを全てロードする
            event
            </summary>
        </member>
        <member name="M:Charamaker2.fileman.whrandhani(System.Single,System.Boolean)">
            <summary>
            0~wの範囲でランダムな整数を発生させる
            </summary>
            <param name="w"></param>
            <param name="minusToo">-w~wの範囲にする</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.pickone``1(System.Collections.Generic.List{``0})">
            <summary>
            Listからランダムに一つピックする
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.pickone``1(``0[])">
            <summary>
            配列からランダムに一つピックする
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.randmods(System.Int32)">
            <summary>
            nより小さい自然数数(0含む)を返す
            </summary>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.plusminus(System.Single)">
            <summary>
            +1か-1を返す
            </summary>
            <param name="per">+1を返す確率</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.plusminus(System.Boolean,System.Boolean)">
            <summary>
            +1か-1を返す
            </summary>
            <param name="ok">+1を返すか</param>
            <param name="plus">ok=trueの解き返すほう</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.percentin(System.Single)">
            <summary>
            なんとなくの確率でTrueを返す
            </summary>
            <param name="per">パーセント(100で確実よもちろん)</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.fileman.buildMotion(System.String,System.Single)">
            <summary>
            モーションをスクリプトから作る
            </summary>
            <param name="script">スクリプトか？</param>
            <param name="speed">再生速度</param>
            <param name="yobidasi">呼び出してくれるクラス</param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.otoman">
            <summary>
            鳴らした音を保存しとくクラス
            </summary>
        </member>
        <member name="T:Charamaker2.motionsaveman">
            <summary>
            モーションをセーブするためのクラス
            </summary>
        </member>
        <member name="M:Charamaker2.motionsaveman.ToLoad(Charamaker2.DataSaver)">
            <summary>
            escapeせずに渡して
            </summary>
            <param name="d">escapeせずに渡して</param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.loadfileEventArgs">
            <summary>
            loadfiletokaのときのイベント
            </summary>
        </member>
        <member name="M:Charamaker2.loadfileEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="max">最大ファイルの数</param>
            <param name="num">今ロードしたファイルの数</param>
            <param name="loaded">ロードを終えたファイルの数</param>
            <param name="filename">ロードしたファイルの名前の代表</param>
        </member>
        <member name="F:Charamaker2.loadfileEventArgs.max">
            <summary>
            ロードするファイルの総数
            </summary>
        </member>
        <member name="F:Charamaker2.loadfileEventArgs.num">
            <summary>
            ロードしたファイルの数
            </summary>
        </member>
        <member name="F:Charamaker2.loadfileEventArgs.loaded">
            <summary>
            ロードを終えたファイルの数
            </summary>
        </member>
        <member name="F:Charamaker2.loadfileEventArgs.name">
            <summary>
            ロードしたファイルの名前の代表
            </summary>
        </member>
        <member name="F:Charamaker2.loadfileEventArgs.type">
            <summary>
            ロードしたファイルの拡張子
            </summary>
        </member>
        <member name="P:Charamaker2.loadfileEventArgs.loadedhi">
            <summary>
            既にロードしたファイルの比
            </summary>
        </member>
        <member name="P:Charamaker2.loadfileEventArgs.numhi">
            <summary>
            今ロードしたファイルの比
            </summary>
        </member>
        <member name="T:Charamaker2.drawings">
            <summary>
            hyojimanが受け入れられる描画器の基底クラス
            </summary>
        </member>
        <member name="F:Charamaker2.drawings.x">
            <summary>
            x,y,z。zは描画順
            </summary>
        </member>
        <member name="F:Charamaker2.drawings.y">
            <summary>
            x,y,z。zは描画順
            </summary>
        </member>
        <member name="F:Charamaker2.drawings.z">
            <summary>
            x,y,z。zは描画順
            </summary>
        </member>
        <member name="M:Charamaker2.drawings.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            基底のコンストラクタ
            </summary>
            <param name="xx">始点のx</param>
            <param name="yy">始点のy</param>
            <param name="zz">描画順z</param>
        </member>
        <member name="M:Charamaker2.drawings.#ctor(Charamaker2.drawings)">
            <summary>
            コピーするときのコンストラクタ
            </summary>
            <param name="d">コピー元</param>
        </member>
        <member name="M:Charamaker2.drawings.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.drawings.draw(Charamaker2.hyojiman,System.Single,System.Boolean)">
             <summary>
             書くときに呼び出されるメソッド
             </summary>
             <param name="hyo">書くhyojiman</param>
             <param name="cl">描画で変化があるならその時の時間の速さ。</param>
            <param name="draw"> 描画するか</param>
             <returns>描画したか</returns>
             
        </member>
        <member name="M:Charamaker2.drawings.add(Charamaker2.hyojiman)">
            <summary>
            表示マンに追加する
            </summary>
            <param name="hyo">追加するやーつ</param>
            <returns>追加できたか</returns>
        </member>
        <member name="M:Charamaker2.drawings.remove(Charamaker2.hyojiman)">
            <summary>
            表示マンから削除する
            </summary>
            <param name="hyo">削除するやつ</param>
            <returns>削除できたか</returns>
        </member>
        <member name="M:Charamaker2.drawings.copy(Charamaker2.drawings)">
            <summary>
            コピーするためのメソッド
            </summary>
            <param name="d">コピー元</param>
        </member>
        <member name="M:Charamaker2.drawings.clone">
            <summary>
            クローンするためのメソッド
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.drawings.inHyoji(Charamaker2.hyojiman)">
            <summary>
            表示マンにて表示されている範囲に入っているか調べる
            </summary>
            <param name="hyo"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.drawings.ToSave">
            <summary>
            セーブする
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.PBHman">
            <summary>
            PBHに仕えるクラス
            </summary>
        </member>
        <member name="T:Charamaker2.messagepicture">
            <summary>
            めっさーじを持つピクチャー
            </summary>
        </member>
        <member name="F:Charamaker2.messagepicture.m">
            <summary>
            メッセージ
            </summary>
        </member>
        <member name="M:Charamaker2.messagepicture.#ctor(Charamaker2.picture,Charamaker2.message)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="p"></param>
            <param name="m"></param>
        </member>
        <member name="M:Charamaker2.messagepicture.#ctor(Charamaker2.messagepicture)">
            <summary>
            ピクチャーをコピーするときのコンストラクタ
            </summary>
            <param name="p">コピー元</param>
        </member>
        <member name="M:Charamaker2.messagepicture.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.messagepicture.setmessage">
            <summary>
            メッセージを整える
            </summary>
        </member>
        <member name="T:Charamaker2.picture">
            <summary>
            画像一枚のクラス
            </summary>
        </member>
        <member name="F:Charamaker2.picture.w">
            <summary>
            幅と高さ
            </summary>
        </member>
        <member name="F:Charamaker2.picture.h">
            <summary>
            幅と高さ
            </summary>
        </member>
        <member name="F:Charamaker2.picture.tx">
            <summary>
            画像の中の中心点
            </summary>
        </member>
        <member name="F:Charamaker2.picture.ty">
            <summary>
            画像の中の中心点
            </summary>
        </member>
        <member name="P:Charamaker2.picture.TX">
            <summary>
            画像の中心点xを返す。
            </summary>
        </member>
        <member name="P:Charamaker2.picture.TY">
            <summary>
            画像の中心点yを返す
            </summary>
        </member>
        <member name="F:Charamaker2.picture.rad">
            <summary>
            ラヂアン
            </summary>
        </member>
        <member name="F:Charamaker2.picture.mir">
            <summary>
            画像を反転させる
            </summary>
        </member>
        <member name="P:Charamaker2.picture.nowtex">
            <summary>
            現在のテクスチャー無い場合は"";
            </summary>
        </member>
        <member name="P:Charamaker2.picture.OPA">
            <summary>
            不透明度。0＜＝＜＝1
            </summary>
        </member>
        <member name="F:Charamaker2.picture.texname">
            <summary>
            テクスチャーの名前。texturesになければ無になる。"nothing"と指定しても無になる
            </summary>
        </member>
        <member name="P:Charamaker2.picture.RAD">
            <summary>
            角度。-Pi＜＝＜＝Pi
            </summary>
        </member>
        <member name="F:Charamaker2.picture.textures">
            <summary>
            テクスチャーの塊
            </summary>
        </member>
        <member name="M:Charamaker2.picture.onetexpic(System.String,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Single,System.Double,System.Single,System.Single,System.Boolean)">
            <summary>
            一枚のテクスチャでピクチャーを生成する
            </summary>
            <param name="tex">テクスチャー</param>
            <param name="z">Z</param>
            <param name="widthscale">横幅をここにそろえる</param>
            <param name="hin">やっぱ縦幅にする</param>
            <param name="txp">中心点の位置x</param>
            <param name="typ">中心点の位置y</param>
            <param name="opa">透明度</param>
            <param name="rad">角度</param>
            <param name="tx">中心の位置x</param>
            <param name="ty">中心の位置y</param>
            <param name="mirror">反転</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.picture.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,System.Boolean,System.Single,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            ピクチャーを作るためのコンストラクタ
            </summary>
            <param name="xx">左上のx座標</param>
            <param name="yy">左上のy座標</param>
            <param name="zz">z</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="ttx">中心x点</param>
            <param name="tty">中心y点</param>
            <param name="sita">ラディアン角度</param>
            <param name="mirror">反転しているか</param>
            <param name="opacity">不透明度</param>
            <param name="tex">テクスチャーの名前</param>
            <param name="texture">テクスチャーの辞書。new Dictionarystringstring{{"def","redbit"}}って感じで</param>
        </member>
        <member name="M:Charamaker2.picture.#ctor(Charamaker2.picture)">
            <summary>
            ピクチャーをコピーするときのコンストラクタ
            </summary>
            <param name="p">コピー元</param>
        </member>
        <member name="M:Charamaker2.picture.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.picture.getcxy(System.Single,System.Single)">
            <summary>
            図形上の一点のx座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときの図形の点の位置</param>
            <param name="hh">左上を0としたときの図形の点の位置</param>
            <returns>返されるのはxy座標の値</returns>
        </member>
        <member name="M:Charamaker2.picture.getcx(System.Single,System.Single)">
            <summary>
            図形上の一点のx座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときの図形の点の位置</param>
            <param name="hh">左上を0としたときの図形の点の位置</param>
            <returns>返されるのはx座標の値</returns>
        </member>
        <member name="M:Charamaker2.picture.getcy(System.Single,System.Single)">
            <summary>
            図形上の一点のy座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときの図形の点の位置</param>
            <param name="hh">左上を0としたときの図形の点の位置</param>
            <returns>返されるのはy座標の値</returns>
        </member>
        <member name="M:Charamaker2.picture.gettxy">
            <summary>
            中心のxy座標を返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.picture.gettx">
            <summary>
            中心点のx座標を返す。
            </summary>
            <returns>x座標</returns>
        </member>
        <member name="M:Charamaker2.picture.getty">
            <summary>
            中心点のy座標を返す。
            </summary>
            <returns>y座標</returns>
        </member>
        <member name="M:Charamaker2.picture.settxy(System.Single,System.Single)">
            <summary>
            中心をxy座標にセットする。
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
        </member>
        <member name="M:Charamaker2.picture.settxy(Charamaker2.Shapes.FXY)">
            <summary>
            中心をxy座標にセットする。
            </summary>
            <param name="xy">セットするxy座標</param>
        </member>
        <member name="M:Charamaker2.picture.scale(System.Single)">
            <summary>
            スケールする
            </summary>
            <param name="sc">倍率</param>
        </member>
        <member name="M:Charamaker2.picture.setcxy(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画像上の任意の一点をxy座標にセットする
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
            <param name="cx">画像上のwの点</param>
            <param name="cy">画像上のhの点</param>
        </member>
        <member name="M:Charamaker2.picture.setcxy(Charamaker2.Shapes.FXY,System.Single,System.Single)">
            <summary>
            画像上の任意の一点をxy座標にセットする
            </summary>
            <param name="xy">セットするxy座標</param>
            <param name="cx">画像上のwの点</param>
            <param name="cy">画像上のhの点</param>
        </member>
        <member name="M:Charamaker2.picture.wowidouxy(System.Single,System.Single)">
            <summary>
            回転している方向に移動する奴
            </summary>
            <param name="dx">x方向の移動量</param>
            <param name="dy">y方向の移動量</param>
        </member>
        <member name="M:Charamaker2.picture.draw(Charamaker2.hyojiman,System.Single,System.Boolean)">
             <summary>
             書くときに呼び出されるメソッド。画面外にある場合は描画されない
             </summary>
             <param name="hyo">書くhyojiman</param>
             <param name="cl">描画で変化があるならその時の時間の速さ。</param>
            <param name="draw"> 描画するか</param>
             <returns>描画したか</returns>
        </member>
        <member name="M:Charamaker2.picture.inHyoji(Charamaker2.hyojiman)">
            <summary>
            表示の範囲に入っているかチェックする
            </summary>
            <param name="hyo">どの表示マンか</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.picture.drawbitmap(Vortice.Direct2D1.ID2D1Bitmap,Charamaker2.hyojiman)">
            <summary>
            ビットマップを描画するぞ
            </summary>
            <param name="bitmap"></param>
            <param name="hyo"></param>
            <returns>完全な画面外だと描画しない</returns>
        </member>
        <member name="M:Charamaker2.picture.copy(Charamaker2.picture)">
            <summary>
            コピーするためのメソッド
            </summary>
            <param name="p">コピー元</param>
        </member>
        <member name="M:Charamaker2.picture.ToSave">
            <summary>
            セーブする
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.picture.ToLoad(Charamaker2.DataSaver)">
            <summary>
            ロードする。
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.haikeidraws">
            <summary>
            内部にdrawingを格納し、背景画像として描画するクラス
            </summary>
        </member>
        <member name="F:Charamaker2.haikeidraws.x">
            <summary>
            x,y方向のスクロール割合
            </summary>
        </member>
        <member name="F:Charamaker2.haikeidraws.y">
            <summary>
            x,y方向のスクロール割合
            </summary>
        </member>
        <member name="F:Charamaker2.haikeidraws.d">
            <summary>
            描く奴
            </summary>
        </member>
        <member name="P:Charamaker2.haikeidraws.kakesc">
            <summary>
            スクロール割合をかけ合わせた奴
            </summary>
        </member>
        <member name="P:Charamaker2.haikeidraws.minsc">
            <summary>
            スクロール割合の小さい方
            </summary>
        </member>
        <member name="M:Charamaker2.haikeidraws.#ctor(System.Single,System.Single,Charamaker2.drawings)">
            <summary>
            コンストラクタだよ
            </summary>
            <param name="scrollwariaix">x方向のスクロール割合</param>
            <param name="scrollwariaiy">y方向のスクロール割合</param>
            <param name="dd">なにかdrawings</param>
        </member>
        <member name="M:Charamaker2.haikeidraws.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.haikeidraws.#ctor(Charamaker2.haikeidraws)">
             <summary>
            コピーするためのコンストラクタ
             </summary>
        </member>
        <member name="M:Charamaker2.haikeidraws.add(Charamaker2.hyojiman)">
            <summary>
            表示マンにぶち込む
            </summary>
            <param name="h"></param>
            <returns>ぶち込めたか</returns>
        </member>
        <member name="M:Charamaker2.haikeidraws.remove(Charamaker2.hyojiman)">
            <summary>
            表示マンから消す
            </summary>
            <param name="h"></param>
            <returns>ぶち消せたか</returns>
        </member>
        <member name="M:Charamaker2.haikeidraws.draw(Charamaker2.hyojiman,System.Single,System.Boolean)">
             <summary>
             描くためのメソッド
             </summary>
             <param name="hyo">描画する表示マン</param>
             <param name="cl">クロック</param>
            <param name="draw"> 描画するか</param>
             <returns></returns>
        </member>
        <member name="M:Charamaker2.haikeidraws.inHyoji(Charamaker2.hyojiman)">
            <summary>
            表示マンの表示できる範囲に入っているか調べる
            </summary>
            <param name="hyo"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.haikeidraws.clone">
            <summary>
            頑張ってクローン
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.timehaikeidraws">
            <summary>
            時間経過で消える背景
            </summary>
        </member>
        <member name="M:Charamaker2.timehaikeidraws.#ctor(System.Single,System.Single,System.Single,Charamaker2.drawings)">
            <summary>
            コンストラクタだよ
            </summary>
            <param name="time">持続時間</param>
            <param name="scrollwariaix">x方向のスクロール割合</param>
            <param name="scrollwariaiy">y方向のスクロール割合</param>
            <param name="dd">なにかdrawings</param>
        </member>
        <member name="M:Charamaker2.timehaikeidraws.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.timehaikeidraws.#ctor(Charamaker2.timehaikeidraws)">
             <summary>
            コピーするためのコンストラクタ
             </summary>
        </member>
        <member name="T:Charamaker2.Phyojiman">
            <summary>
            表示マンが書ける
            </summary>
        </member>
        <member name="F:Charamaker2.Phyojiman.hj">
            <summary>
            表示マン
            </summary>
        </member>
        <member name="F:Charamaker2.Phyojiman.auto">
            <summary>
            自動的に表示マンを進める
            </summary>
        </member>
        <member name="M:Charamaker2.Phyojiman.#ctor(Charamaker2.picture,Charamaker2.hyojiman,System.Boolean)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="p"></param>
            <param name="h"></param>
            <param name="auto">自動的にフレームするか</param>
        </member>
        <member name="M:Charamaker2.Phyojiman.#ctor(Charamaker2.Phyojiman)">
            <summary>
            ピクチャーをコピーするときのコンストラクタ
            </summary>
            <param name="p">コピー元</param>
        </member>
        <member name="M:Charamaker2.Phyojiman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="T:Charamaker2.hyojiman">
            <summary>
            画面を描画したり、音を出したり、そういうのを行う
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.begindraw(System.Boolean)">
            <summary>
            レンダーの描画を開始する。enddrawの間に描画を記述する
            </summary>
            <param name="resethaikei">resethaikeiも呼び出すか</param>
        </member>
        <member name="M:Charamaker2.hyojiman.resethaikei">
            <summary>
            背景をリセットする。begindrawは呼び出しといてね
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.enddraw">
            <summary>
            レンダーの描画を終了するbegindrawの間に描画を記述する。
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.ikiutusi(Vortice.Direct2D1.ID2D1RenderTarget)">
            <summary>
            この表示マンの表示を別レンダーに生き写す
            </summary>
            <returns>このビットマップはDisposeしてね</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.getbitmap">
            <summary>
            ビットマップレンダーならビットマップをもらう。
            </summary>
            <returns>ないならnull</returns>
        </member>
        <member name="F:Charamaker2.hyojiman.otos">
            <summary>
            再生する音
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.otovols">
            <summary>
            再生す音の音量
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.volume">
            <summary>
            この表示マンの音量
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.bgm">
            <summary>
            再生するBGM
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.butu">
            <summary>
            同じBGMを流すときに最初から再生するか
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.playoto(System.String,System.Single)">
            <summary>
            音を出す。通信や、リプレイの保存をするならばこれを使わなくてはならない。
            filemanのものとほぼ同じである。
            </summary>
            <param name="otoe">.\oto\*.wav</param>
            <param name="vol">この音のボリューム</param>
        </member>
        <member name="M:Charamaker2.hyojiman.playoto(Charamaker2.hyojiman)">
            <summary>
            他のhyojimanから音をもってくる
            </summary>
            <param name="hyo">持ってくる元</param>
        </member>
        <member name="M:Charamaker2.hyojiman.playbgm(Charamaker2.hyojiman)">
            <summary>
            他のhyojimanのBGMをコピーする
            </summary>
            <param name="hyo">コピー元</param>
        </member>
        <member name="M:Charamaker2.hyojiman.playbgm(System.String,System.Boolean)">
            <summary>
            bgmを開始する。リプレイの保存をするならばこれを使わなくてはならない。
            filemanのものとほぼ同じである。
            </summary>
            <param name="bgme">.\oto\bgm\*.wav</param>
            <param name="butugiri"></param>
        </member>
        <member name="F:Charamaker2.hyojiman.haikeibokasi">
            <summary>
            背景をどれだけぼかすか。スクロール割合0.1につき一回このぼかしが入る。
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.pics">
            <summary>
            描画物体のリスト
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.haikeipics">
            <summary>
            背景描画物体のリスト
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.effects">
            <summary>
            エフェクトのリスト
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.camx">
            <summary>
            画面左上のカメラ座標
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.camy">
            <summary>
            画面左上のカメラ座標
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.HR">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.HG">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.HB">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.HOpa">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.bairitu">
            <summary>
            拡大率。オブジェクトの大きさを一定にしたいときはこっちを参照
            </summary>
        </member>
        <member name="P:Charamaker2.hyojiman.Tbai">
            <summary>
            画面の画質も含めた本当の拡大率。ガチ描画の時には使う
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.gasitu">
            <summary>
            画質
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.tag">
            <summary>
            いろいろ載せられるタグ。
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.skipn">
            <summary>
            謎の変数
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.render">
            <summary>
            レンダー
            </summary>
        </member>
        <member name="P:Charamaker2.hyojiman.ww">
            <summary>
            ウィンドウの座標での幅
            </summary>
        </member>
        <member name="P:Charamaker2.hyojiman.wh">
            <summary>
            ウィンドウの座標での高さ
            </summary>
        </member>
        <member name="P:Charamaker2.hyojiman.gasituSize">
            <summary>
            画質を考慮したピクセルサイズ
            </summary>
        </member>
        <member name="P:Charamaker2.hyojiman.TrueSize">
            <summary>
            本来のピクセルサイズ
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.maxdraws">
            <summary>
            同時に表示できる描画オブジェクトの限界量
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.setBairituW(System.Single,System.Boolean)">
            <summary>
            bairituを幅を指定して決める
            </summary>
            <param name="w">その幅</param>
            <param name="h">高さにするか</param>
        </member>
        <member name="M:Charamaker2.hyojiman.#ctor(Vortice.Direct2D1.ID2D1RenderTarget,System.Single,System.Boolean)">
            <summary>
            表示マンのコンストラクタ
            </summary>
            <param name="ren"></param>
            <param name="gasitu"></param>
            <param name="destroyRender">レンダーを死ぬとき破壊するか</param>
        </member>
        <member name="M:Charamaker2.hyojiman.tusinhyoji(Charamaker2.hyojiman)">
            <summary>
            通信を受け取ったときにコピーするためのメソッド。
            </summary>
            <param name="moto">コピー元</param>
        </member>
        <member name="M:Charamaker2.hyojiman.truecopy(Charamaker2.hyojiman)">
            <summary>
            別の表示マンをちゃんとコピーする
            </summary>
            <param name="h">コピー元</param>
        </member>
        <member name="M:Charamaker2.hyojiman.copy(Charamaker2.hyojiman)">
            <summary>
            ちょっと変なコピー。hyojiを行う前に分裂させ、1フレーム限りのエフェクト(UIとか)を乗せてhyojiしたのちnisehyojiし通信するとよき
            </summary>
            <param name="moto">コピー元</param>
        </member>
        <member name="M:Charamaker2.hyojiman.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.nisehyoji(System.Single)">
            <summary>
            エフェクトのフレームだけ行う
            </summary>
            <param name="cl">クロック</param>
        </member>
        <member name="F:Charamaker2.hyojiman.otoOptin.ordinal">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.otoOptin.PlayandDontRemove">
            <summary>
            再生するけどそのまんま。録画を再生するときに。
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.otoOptin.Dont">
            <summary>
            何もしない。保存される
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.otoOptin.OnlyBgm">
            <summary>
            BGMだけ再生し、残りは破棄する。シーンのスキップに。
            </summary>
        </member>
        <member name="F:Charamaker2.hyojiman.otoOptin.BreakAll">
            <summary>
            全てを破棄する
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.hyoji2(Vortice.Direct2D1.ID2D1RenderTarget,System.Single,System.Boolean,System.Boolean,System.Boolean,Charamaker2.hyojiman.otoOptin,System.Boolean)">
            <summary>
            別のレンダーに描画する
            </summary>
            <param name="cl">クロック</param>
            <param name="begin">描画開始をするか</param>
            <param name="end">描画終了をするか</param>
            <param name="doEffectframe">エフェクトのフレームを行うか</param>
            <param name="oO">音を再生した後その情報を消すか(録画を再生するときのみdontremove,撮影はDontで?)</param>
            <param name="draw">描画とか音再生するか</param>
            <param name="rend">別のレンダーに書きたい場合はこれ</param>
        </member>
        <member name="M:Charamaker2.hyojiman.hyoji(System.Single,System.Boolean,System.Boolean,System.Boolean,Charamaker2.hyojiman.otoOptin,System.Boolean)">
            <summary>
            表示を行う
            </summary>
            <param name="cl">クロック</param>
            <param name="begin">描画開始をするか</param>
            <param name="end">描画終了をするか</param>
            <param name="doEffectframe">エフェクトのフレームを行うか</param>
            <param name="oO">音を再生した後その情報を消すか(録画を再生するときのみdontremove,撮影はDontで?)</param>
            <param name="draw">描画とか音再生するか</param>
        </member>
        <member name="M:Charamaker2.hyojiman.resetpics">
            <summary>
            picsの並び順を整えたいときにどうぞ
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.resethaikeipics">
            <summary>
            背景の並び順を整えたいときにどうぞ
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.reset">
            <summary>
            リセットするメソッド。
            これよりfileman.gethyojimanのほうがいいよ
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.resetoto">
            <summary>
            音、BGMをリセットする
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.clearpics">
            <summary>
            追加されてるdrawingsを全部消す
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.clearhaikeipics">
            <summary>
            追加されてるhaikeidrawingsを全部消す
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.addpicture(Charamaker2.drawings)">
            <summary>
            drawingsを追加する
            </summary>
            <param name="p">なんでも</param>
            <returns>追加ができたかどうか</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.removepicture(Charamaker2.drawings)">
            <summary>
            drawingsを削除する
            </summary>
            <param name="p">なんでも</param>
            <returns>削除できたかどうか</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.addhaikeipicture(Charamaker2.haikeidraws)">
            <summary>
            背景を追加する
            </summary>
            <param name="p">なんでも</param>
            <returns>追加できたかどうか</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.removehaikeipicture(Charamaker2.haikeidraws)">
            <summary>
            背景を削除する
            </summary>
            <param name="p">なんでも</param>
            <returns>削除できたかどうか</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.picssort">
            <summary>
            timソートでpicsを整理する
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.haikeisort">
            <summary>
            timソートで背景を整理する
            </summary>
        </member>
        <member name="M:Charamaker2.hyojiman.picturegets(System.Single,System.Single,Charamaker2.Shapes.Shape)">
            <summary>
            指定ポイントに触れているピクチャーのリストを返す
            </summary>
            <param name="x">ポイントのx座標</param>
            <param name="y">ポイントのy座標</param>
            <param name="s">ピクチャーをどの図形で見るか</param>
            <returns>ピクチャーのリスト</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.andbyte(Charamaker2.hyojiman)">
            <summary>
            表示マンをバイト列に変換する
            </summary>
            <param name="hyo">変換する表示マン</param>
            <returns>バイト列</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.andbyte(System.Byte[])">
            <summary>
            バイト列を表示マンに変換する
            </summary>
            <param name="hyo">変換するバイト列</param>
            <returns>表示マン</returns>
        </member>
        <member name="M:Charamaker2.hyojiman.drawLine(System.Single,System.Single,System.Single,System.Single,Vortice.Mathematics.Color4,System.Single)">
            <summary>
            線を描く
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="X2"></param>
            <param name="Y2"></param>
            <param name="col"></param>
            <param name="hutosa"></param>
        </member>
        <member name="M:Charamaker2.hyojiman.ZahyoconvertToX(Charamaker2.hyojiman,System.Single)">
            <summary>
            座標を引数表示マンの座標に変える
            </summary>
            <param name="hyo"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.hyojiman.ZahyoconvertToY(Charamaker2.hyojiman,System.Single)">
            <summary>
            座標を引数表示マンの座標に変える
            </summary>
            <param name="hyo"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.hyojiman.ToShape">
            <summary>
            表示マンを図形に変換する。
            表示領域にキャラクターが含まれるか判定したいときに使ってね
            </summary>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.message">
            <summary>
            文字を書くためのクラス
            </summary>
        </member>
        <member name="F:Charamaker2.message.maxmoji">
            <summary>
            メッセージに記述できる最大の文字数
            </summary>
        </member>
        <member name="F:Charamaker2.message._nmoji">
            <summary>
            何文字の幅か
            </summary>
        </member>
        <member name="F:Charamaker2.message._tyusin">
            <summary>
            文字数で表す文字列の中心
            </summary>
        </member>
        <member name="P:Charamaker2.message.nmoji">
            <summary>
            何文字の幅か
            </summary>
        </member>
        <member name="P:Charamaker2.message.tyusin">
            <summary>
            文字数で表す文字列の中心
            </summary>
        </member>
        <member name="F:Charamaker2.message.size">
            <summary>
            文字のサイズ
            </summary>
        </member>
        <member name="F:Charamaker2.message.R">
            <summary>
            RGBでしかない
            </summary>
        </member>
        <member name="F:Charamaker2.message.G">
            <summary>
            RGBでしかない
            </summary>
        </member>
        <member name="F:Charamaker2.message.B">
            <summary>
            RGBでしかない
            </summary>
        </member>
        <member name="F:Charamaker2.message.text">
            <summary>
            表示するテキスト
            </summary>
        </member>
        <member name="F:Charamaker2.message.speed">
            <summary>
            1文字表示するのに必要なクロック
            </summary>
        </member>
        <member name="F:Charamaker2.message.time">
            <summary>
            持続時間
            </summary>
        </member>
        <member name="F:Charamaker2.message.timer">
            <summary>
            タイマーでしかない
            </summary>
        </member>
        <member name="F:Charamaker2.message.kyotyou">
            <summary>
            強調するか
            </summary>
        </member>
        <member name="M:Charamaker2.message.onhyoji(Charamaker2.hyojiman)">
            <summary>
            表示マンに乗っているか
            </summary>
            <param name="hyojiman">その表示マン</param>
            <returns>乗っているか</returns>
        </member>
        <member name="M:Charamaker2.message.endmove(System.Single)">
            <summary>
            動きを追わらせる
            </summary>
            <param name="power">終わらせる時間のパワー</param>
            <returns>終わっていたらtrue</returns>
        </member>
        <member name="P:Charamaker2.message.sinderu">
            <summary>
            死ぬべきか
            </summary>
        </member>
        <member name="P:Charamaker2.message.TIMEA">
            <summary>
            合計の表示時間
            </summary>
        </member>
        <member name="P:Charamaker2.message.SIZE">
            <summary>
            文字のサイズ
            </summary>
        </member>
        <member name="F:Charamaker2.message.w">
            <summary>
            バイト的なカウント
            </summary>
        </member>
        <member name="P:Charamaker2.message.maxbytecount">
            <summary>
            最大の横幅のバイト的な文字数のカウント
            </summary>
        </member>
        <member name="P:Charamaker2.message.W">
            <summary>
            横幅の長さ
            </summary>
        </member>
        <member name="P:Charamaker2.message.WWW">
            <summary>
            最大であろう横幅の長さ
            </summary>
        </member>
        <member name="F:Charamaker2.message.sts">
            <summary>
            \nや文字幅オーバーとかで分割された列
            </summary>
        </member>
        <member name="M:Charamaker2.message.stsw(System.Int32)">
            <summary>
            その行のバイト的なカウントを取る
            </summary>
            <param name="gyo">n行目</param>
            <returns>カウント</returns>
        </member>
        <member name="P:Charamaker2.message.H">
            <summary>
            文字列の高さ
            </summary>
        </member>
        <member name="P:Charamaker2.message.sitazoroeman">
            <summary>
            下ぞろえをするときに移動する距離
            </summary>
        </member>
        <member name="P:Charamaker2.message.mx">
            <summary>
            文字を書き始めるx
            </summary>
        </member>
        <member name="P:Charamaker2.message.my">
            <summary>
            文字を書き始めるy
            </summary>
        </member>
        <member name="P:Charamaker2.message.opa">
            <summary>
            不透明度
            </summary>
        </member>
        <member name="P:Charamaker2.message.rad">
            <summary>
            角度
            </summary>
        </member>
        <member name="F:Charamaker2.message.mirror">
            <summary>
            反転するか
            </summary>
        </member>
        <member name="F:Charamaker2.message.baix">
            <summary>
            なぜだか倍率
            </summary>
        </member>
        <member name="F:Charamaker2.message.baiy">
            <summary>
            なぜだか倍率
            </summary>
        </member>
        <member name="F:Charamaker2.message.sita">
            <summary>
            下でそろえる
            </summary>
        </member>
        <member name="M:Charamaker2.message.#ctor(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.String,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            メッセージをつくる
            </summary>
            <param name="x">開始x座標</param>
            <param name="y">開始y座標</param>
            <param name="ookisa">フォントの大きさ</param>
            <param name="mojisuu">文字数の幅(日本語はちょっとデカい)</param>
            <param name="tyusindoko">中心の文字数</param>
            <param name="hyojispeed">文字が表示されるに当たって必要なクロック数</param>
            <param name="hyojitime">文字が完全に表示されたのちに表示される時間(-1)で無制限</param>
            <param name="textt">文字の内容</param>
            <param name="RR">R</param>
            <param name="GG">G</param>
            <param name="BB">B</param>
            <param name="kyotyousuru">強調するか</param>
            <param name="z">z</param>
            <param name="sitazoroe">下でそろえるか</param>
        </member>
        <member name="M:Charamaker2.message.#ctor(Charamaker2.message)">
            <summary>
            コピーのコンストラクタ
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Charamaker2.message.setmaxopa(System.Single)">
            <summary>
            フェードインアウトの最大の不透明度を設定する
            </summary>
            <param name="opa"></param>
        </member>
        <member name="M:Charamaker2.message.setfadeout(System.Single,System.Single)">
            <summary>
            フェードアウトを設定する。ちなみに自動でhyojimanから消える。
            </summary>
            <param name="start">開始時間</param>
            <param name="length">長さ</param>
        </member>
        <member name="M:Charamaker2.message.setfadein(System.Single,System.Single)">
            <summary>
            フェードインを設定する
            </summary>
            <param name="length">長さ</param>
            <param name="start">開始時間</param>
        </member>
        <member name="M:Charamaker2.message.sinanu">
            <summary>
            一時的に死なないようにする
            </summary>
        </member>
        <member name="P:Charamaker2.message.texthyojitime">
            <summary>
            テキストを表示しきるのにかかる時間。
            </summary>
        </member>
        <member name="M:Charamaker2.message.textoraa">
            <summary>
            テキストを作り出す
            </summary>
            <returns>生成された奴</returns>
        </member>
        <member name="M:Charamaker2.message.susumukun(Charamaker2.hyojiman,System.Single)">
            <summary>
            タイマーを進めるだけ
            </summary>
            <param name="hyo"></param>
            <param name="cl"></param>
        </member>
        <member name="M:Charamaker2.message.byoga(Charamaker2.hyojiman,System.Single,System.Boolean)">
            <summary>
            文字を描画する
            </summary>
            <param name="hyo"></param>
            <param name="cl"></param>
            <param name="draw"></param>
        </member>
        <member name="M:Charamaker2.message.hutidorin(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.String,System.Single,System.Single,System.Single,System.Boolean,System.Single,Charamaker2.hyojiman,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            縁取りを適用したメッセージ群を作り出す
            </summary>
            <param name="sabun">どのぐらいずらすか</param>
            <param name="hyo">追加先の表示マン</param>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="ookisam">文字の大きさ</param>
            <param name="mojisuu">文字数</param>
            <param name="tyusindoko">中心</param>
            <param name="hyojispeed">1文字表示に必要な時間</param>
            <param name="hyojitime">表示する時間</param>
            <param name="textt">テキスト</param>
            <param name="RR">R</param>
            <param name="GG">G</param>
            <param name="BB">B</param>
            <param name="kyoutyousuru">強調するか</param>
            <param name="z">z</param>
            <param name="sitazoroe">下でそろえるか</param>
            <param name="R2">後ろのR,-1で自動</param>
            <param name="G2">後ろのG,-1で自動</param>
            <param name="B2">後ろのB,-1で自動</param>
            <param name="dz">後ろの前とのzの差</param>
            <param name="kazu">何個で縁取りするか。0~4</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.message.copy(Charamaker2.message)">
            <summary>
            コピーするためのメソッド
            </summary>
            <param name="m">コピー元</param>
        </member>
        <member name="T:Charamaker2.input.itype">
            <summary>
            インプットのタイプ,押したとき・離されたとき・前述二個OR押されているときの三種類
            </summary>
        </member>
        <member name="F:Charamaker2.input.itype.down">
            <summary>
            押されたとき
            </summary>
        </member>
        <member name="F:Charamaker2.input.itype.ing">
            <summary>
            押されたとき、離されたとき、押されている時すべて
            </summary>
        </member>
        <member name="F:Charamaker2.input.itype.up">
            <summary>
            離されたとき
            </summary>
        </member>
        <member name="T:Charamaker2.input.inputin">
            <summary>
            キーボードとマウスの入力を扱うクラス。
            毎フレームごとにtopre()とsetpointer()を行い、
            formのkeydown,keyupイベントにdown(),up()を接続すれば、
            入力が完成する。
            </summary>
        </member>
        <member name="F:Charamaker2.input.inputin.raw">
            <summary>
            ナマの入力を保存するためのやつ。キーコンフィグのときとかに使う
            </summary>
        </member>
        <member name="F:Charamaker2.input.inputin.rawconv">
            <summary>
            ナマの変換
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.#ctor">
            <summary>
            空のコンストラクタ
            </summary>
        </member>
        <member name="F:Charamaker2.input.inputin.x">
            <summary>
            マウスの座標
            </summary>
        </member>
        <member name="F:Charamaker2.input.inputin.y">
            <summary>
            マウスの座標
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.tusininput(Charamaker2.input.inputin)">
            <summary>
            通信でインプットを受け取ったときなどにインプットをこれにコピーする
            </summary>
            <param name="moto">コピー元</param>
        </member>
        <member name="M:Charamaker2.input.inputin.down(System.Windows.Forms.Keys)">
            <summary>
            ナマでキーを押す。
            </summary>
            <param name="i">押すキー</param>
        </member>
        <member name="M:Charamaker2.input.inputin.down(System.Windows.Forms.MouseButtons)">
            <summary>
            ナマでマウスのボタンを押す
            </summary>
            <param name="i">押すボタン</param>
        </member>
        <member name="M:Charamaker2.input.inputin.up(System.Windows.Forms.Keys)">
            <summary>
            ナマでキーを離す
            </summary>
            <param name="i">離すキー</param>
        </member>
        <member name="M:Charamaker2.input.inputin.up(System.Windows.Forms.MouseButtons)">
            <summary>
            ナマでマウスのボタンを離す
            </summary>
            <param name="i">離すボタン</param>
        </member>
        <member name="M:Charamaker2.input.inputin.upall">
            <summary>
            今の全てのボタンを上げる
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.preupall">
            <summary>
            前の全てのボタンを上げる
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.down(System.Windows.Forms.Keys,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換器をもとにキーを押す。変換器にない入力はそのままになる。
            </summary>
            <param name="i">押すキー</param>
            <param name="converts">変換器</param>
        </member>
        <member name="M:Charamaker2.input.inputin.down(System.Windows.Forms.MouseButtons,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換器をもとにマウスのボタンを押す。変換器にない入力はそのままになる。
            </summary>
            <param name="i">押すボタン</param>
            <param name="converts">変換器</param>
        </member>
        <member name="M:Charamaker2.input.inputin.up(System.Windows.Forms.Keys,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換器をもとにキーを離す。変換器にない入力はそのままになる。
            </summary>
            <param name="i">離すキー</param>
            <param name="converts">変換器</param>
        </member>
        <member name="M:Charamaker2.input.inputin.up(System.Windows.Forms.MouseButtons,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換器をもとにマウスのボタンを離す。変換器にない入力はそのままになる。
            </summary>
            <param name="i">離すボタン</param>
            <param name="converts">変換器</param>
        </member>
        <member name="M:Charamaker2.input.inputin.topre">
            <summary>
            入力を過去のものとする。ゲームのティックに伴って呼び出す。さもなくばitypeが機能しない
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.rawX(Charamaker2.hyojiman)">
            <summary>
            生の入力から座標をもらってくる。UI座標の時使え
            </summary>
            <param name="hyo"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.input.inputin.rawY(Charamaker2.hyojiman)">
            <summary>
            生の入力から座標をもらってくる。UI座標の時使え
            </summary>
            <param name="hyo"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.input.inputin.setpointer(Charamaker2.hyojiman,System.Windows.Forms.Form,System.Boolean)">
            <summary>
            マウスの座標をカーソルからセットする。rawにもセットされる
            </summary>
            <param name="hyojiman">活動制限のためのhyojiman</param>
            <param name="f">座標変換のためのフォーム</param>
            /// <param name="gamennai">falseの時、画面外の指定を可能にする</param>
        </member>
        <member name="M:Charamaker2.input.inputin.setlockpointer(System.Drawing.Point,Charamaker2.hyojiman,System.Windows.Forms.Form,System.Boolean)">
            <summary>
            マウスの座標を中心点との差分でポインタの座標からセットする。
            </summary>
            
            <param name="prepoint">前回の戻り値。nullはやめてね</param>
            <param name="hyojiman">活動制限のためのhyojiman</param>
            <param name="f">座標変換のためのフォーム</param>
            <param name="gamennai">falseの時、画面外の指定を可能にする</param>
            <returns>保存しといて次代入するポイント</returns>>
        </member>
        <member name="M:Charamaker2.input.inputin.ok(Charamaker2.input.itype)">
            <summary>
            何かしらのボタンが押されてたりしてるか判定する
            </summary>
            <param name="t">押し方のタイプ</param>
            <returns>押されたりしているか</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.ok(System.Windows.Forms.Keys,Charamaker2.input.itype)">
            <summary>
            特定のキーが押されたりしているか判定する
            </summary>
            <param name="i">そのキー</param>
            <param name="t">押されたり仕方のタイプ</param>
            <returns>押されたりしているか</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.ok(System.Windows.Forms.MouseButtons,Charamaker2.input.itype)">
            <summary>
            特定のマウスのボタンが押されたりしているか判定する
            </summary>
            <param name="i">そのボタン</param>
            <param name="t">押されたり仕方のタイプ</param>
            <returns>押されたりしているか</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getdownkey">
            <summary>
            現在押されているキーを取得する
            </summary>
            <returns>キーの列のコピー</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getdownbutton">
            <summary>
            現在押されているマウスのボタンを取得する
            </summary>
            <returns>マウスのボタンの列のコピー</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getupkey">
            <summary>
            過去押されていたキーを取得する
            </summary>
            <returns>キーの列のコピー</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getupbutton">
            <summary>
            過去押されていたマウスのボタンを取得する
            </summary>
            <returns>マウスのボタンの列のコピー</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getNCdownkey(System.Collections.Generic.List{System.Windows.Forms.Keys},System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            キー列から変換されていないキーを削除し変換されているキーを取得しようとする。
            </summary>
            <param name="k">キー列</param>
            <param name="converts">変換器</param>
            <returns>変換されているキー列</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getNCdownbutton(System.Collections.Generic.List{System.Windows.Forms.MouseButtons},System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            マウスのボタン列から変換されていないボタンを削除し変換されているボタンを取得しようとする。
            </summary>
            <param name="m">ボタン列</param>
            <param name="converts">変換器</param>
            <returns>変換されているボタン列</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.andbyte(Charamaker2.input.inputin)">
            <summary>
            インプットをバイト列へと変換する
            </summary>
            <param name="i">インプット</param>
            <returns>バイト列</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.andbyte(System.Byte[])">
            <summary>
            バイト列をインプットに変換する
            </summary>
            <param name="i">バイト列</param>
            <returns>インプット</returns>
        </member>
        <member name="F:Charamaker2.input.inputin.tag">
            <summary>
            通信するときとかに情報を乗せる用
            </summary>
        </member>
        <member name="M:Charamaker2.input.inputin.getConvertmaeinput(System.Windows.Forms.Keys,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換する前の入力キー・ボタンをテキストとして取得しようとする
            </summary>
            <param name="k">そのキー</param>
            <param name="converts">変換IPC列</param>
            <returns>Key: OR Mouse: OR None</returns>
        </member>
        <member name="M:Charamaker2.input.inputin.getConvertmaeinput(System.Windows.Forms.MouseButtons,System.Collections.Generic.List{Charamaker2.input.IPC})">
            <summary>
            変換する前の入力キー・ボタンをテキストとして取得しようとする
            </summary>
            <param name="m">そのボタン</param>
            <param name="converts">変換IPC列</param>
            <returns>Key: OR Mouse: OR None</returns>
        </member>
        <member name="T:Charamaker2.input.IPC">
            <summary>
            インプットを変換するための器具。
            
            </summary>
        </member>
        <member name="P:Charamaker2.input.IPC.KO">
            <summary>
            出力キー
            </summary>
        </member>
        <member name="P:Charamaker2.input.IPC.MO">
            <summary>
            出力マウスボタン
            </summary>
        </member>
        <member name="P:Charamaker2.input.IPC.KI">
            <summary>
            入力キー
            </summary>
        </member>
        <member name="P:Charamaker2.input.IPC.MI">
            <summary>
            入力マウスボタン 
            </summary>
        </member>
        <member name="M:Charamaker2.input.IPC.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
            <summary>
            変換器を作る
            </summary>
            <param name="i">入力</param>
            <param name="o">出力</param>
        </member>
        <member name="M:Charamaker2.input.IPC.#ctor(Charamaker2.input.IPC)">
            <summary>
            変換器をコピーする
            </summary>
            <param name="i">変換器</param>
        </member>
        <member name="M:Charamaker2.input.IPC.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.MouseButtons)">
            <summary>
            変換器を作る
            </summary>
            <param name="i">入力</param>
            <param name="o">出力</param>
        </member>
        <member name="M:Charamaker2.input.IPC.#ctor(System.Windows.Forms.MouseButtons,System.Windows.Forms.Keys)">
            <summary>
            変換器を作る
            </summary>
            <param name="i">入力</param>
            <param name="o">出力</param>
        </member>
        <member name="M:Charamaker2.input.IPC.#ctor(System.Windows.Forms.MouseButtons,System.Windows.Forms.MouseButtons)">
            <summary>
            変換器を作る
            </summary>
            <param name="i">入力</param>
            <param name="o">出力</param>
        </member>
        <member name="M:Charamaker2.input.IPC.flip">
            <summary>
            入力と出力を入れ替える
            </summary>
        </member>
        <member name="M:Charamaker2.input.IPC.getin(System.Windows.Forms.Keys)">
            <summary>
            入力が等しいかを判断する
            </summary>
            <param name="i">その入力</param>
            <returns>等しい</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getin(System.Windows.Forms.MouseButtons)">
            <summary>
            入力が等しいかを判断する
            </summary>
            <param name="i">その入力</param>
            <returns>等しい</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getout(System.Windows.Forms.Keys)">
            <summary>
            出力が等しいかを判断する
            </summary>
            <param name="i">その出力</param>
            <returns>等しい</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getout(System.Windows.Forms.MouseButtons)">
            <summary>
            出力が等しいかを判断する
            </summary>
            <param name="i">その出力</param>
            <returns>等しい</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.changein(System.Windows.Forms.Keys)">
            <summary>
            入力を入れ替える
            </summary>
            <param name="i">入れ替え先の入力</param>
            <returns>入れ替えて変化したか</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.changein(System.Windows.Forms.MouseButtons)">
            <summary>
            入力を入れ替える
            </summary>
            <param name="i">入れ替え先の入力</param>
            <returns>入れ替えて変化したか</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getString">
            <summary>
            何をどう変換しているのかを文字列で表す
            </summary>
            <returns>入力 => 出力</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getoutString">
            <summary>
            出力のストリングを返す
            </summary>
            <returns>出力</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.getinString">
            <summary>
            入力のストリングを返す
            </summary>
            <returns>入力</returns>
        </member>
        <member name="M:Charamaker2.input.IPC.convertstringinput(System.Collections.Generic.List{Charamaker2.input.IPC},System.String)">
            <summary>
            文章の中に含まれてる入力([Key:Left],[Mus:Right])[]必要！を変換する
            </summary>
            <param name="ipss">変換器共</param>
            <param name="mo">変換する文字列</param>
            <returns>変換した文字列</returns>
        </member>
        <member name="M:Charamaker2.maker.motionmaker.setmotionjouhou(Charamaker2.Character.motion)">
            <summary>
            モーションの情報を表示する
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Charamaker2.maker.motionmaker.setmotionjouhou(Charamaker2.motionsaveman)">
            <summary>
            モーションの情報を表示する
            </summary>
            <param name="m"></param>
        </member>
        <member name="F:Charamaker2.maker.motionmaker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Charamaker2.maker.motionmaker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Charamaker2.maker.motionmaker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Charamaker2.maker.charamaker.components">
            <summary> 
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:Charamaker2.maker.charamaker.Dispose(System.Boolean)">
            <summary> 
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージド リソースを破棄する場合は true を指定し、その他の場合は false を指定します。</param>
        </member>
        <member name="M:Charamaker2.maker.charamaker.InitializeComponent">
            <summary> 
            デザイナー サポートに必要なメソッドです。このメソッドの内容を 
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="T:Charamaker2.movie.Movie">
            <summary>
            使わないでくれー！見ないでくれー！
            </summary>
        </member>
        <member name="M:Charamaker2.Program.Main">
            <summary>
            アプリケーションのメイン エントリ ポイントです。
            </summary>
        </member>
        <member name="T:Charamaker2.Shapes.FXY">
            <summary>
            ポイント,ベクトルを表すためのクラス
            </summary>
        </member>
        <member name="T:Charamaker2.Shapes.lineX">
            <summary>
            接触したライン等表すクラス
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.lineX.#ctor(Charamaker2.Shapes.FXY,Charamaker2.Shapes.FXY,Charamaker2.Shapes.FXY)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="a">始まりの点</param>
            <param name="b">終わりの点</param>
            <param name="kijyun">辺の内側の中心点</param>
        </member>
        <member name="M:Charamaker2.Shapes.lineX.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="bx">開始点x</param>
            <param name="by">開始点y</param>
            <param name="ex">終了店x</param>
            <param name="ey">終了店y</param>
            <param name="kx">基準点(内側の点)x</param>
            <param name="ky">基準点y</param>
        </member>
        <member name="P:Charamaker2.Shapes.lineX.center">
            <summary>
            線の中間地点
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.lineX.onInside(Charamaker2.Shapes.FXY)">
            <summary>
            その点が辺の内側にあるか検知する
            </summary>
            <param name="poi">その点</param>
            <returns>内側であればtrue</returns>
        </member>
        <member name="M:Charamaker2.Shapes.lineX.getkyori(System.Single,System.Single)">
            <summary>
            点と直線の距離を求めてくれる
            </summary>
            <param name="px"></param>
            <param name="py"></param>
            <returns>.lengthでちゃんとした距離</returns>
        </member>
        <member name="T:Charamaker2.Shapes.Shape">
            <summary>
            図形の基底クラス
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.atarun(Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape)">
            <summary>
            図形二つの重なり。両側からやるよ
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.atarun(Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape)">
            <summary>
            図形2つとそれぞれの位置フレーム前での重なり
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.gousei(Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape)">
            <summary>
            二つの図形を合成する。結果は最大の面積を持つ図形になる
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.radseiki(System.Double)">
            <summary>
            ラジアンの正規化
            </summary>
            <param name="r">正規化するラジアン</param>
            <returns>-PI~PI正規化されたラジアン</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.radseiki2(System.Double)">
            <summary>
            ラジアンの正規化2
            </summary>
            <param name="r">正規化するラジアン</param>
            <returns>0~2PIに正規化されたラジアン</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.radkatamuki(System.Double)">
            <summary>
            ラジアンを-90~90度に直す
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.crosses(System.Double[],System.Double[])">
            <summary>
            線がクロスしているのかを判定する
            </summary>
            <param name="mom">{x1,y1,x2,y2}</param>
            <param name="mom2">{x1,y1,x2,y2}</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.crosses(Charamaker2.Shapes.FXY,Charamaker2.Shapes.FXY,Charamaker2.Shapes.FXY,Charamaker2.Shapes.FXY)">
            <summary>
            線がクロスしているのかを判定する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.crosses(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            線がクロスしているのかを判定する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getinnerpoint(System.Double,System.Single,System.Boolean)">
            <summary>
            図形内部の点を割り出す
            </summary>
            <param name="kaku">中心からの角度</param>
            <param name="nagwari">長さの割合</param>
            <param name="kaiten">trueならkakuが図形の回転型されたものになる</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getzurasi(Charamaker2.Shapes.FXY,Charamaker2.Shapes.lineX,System.Boolean,System.Boolean)">
            <summary>
            点を線と重なるようにずらす幅を教えてくれる。どうしても重ならない場合は(0,0)
            </summary>
            <param name="point"></param>
            <param name="l"></param>
            <param name="yokomugen">線が無限の長さだと解釈する</param>
            <param name="outer">外側の点だとしてもずらす</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.op_Addition(Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape)">
            <summary>
            図形を合成する
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="F:Charamaker2.Shapes.Shape.x">
            <summary>
            図形の基本要素
            </summary>
        </member>
        <member name="F:Charamaker2.Shapes.Shape.y">
            <summary>
            図形の基本要素
            </summary>
        </member>
        <member name="F:Charamaker2.Shapes.Shape.w">
            <summary>
            図形の基本要素
            </summary>
        </member>
        <member name="F:Charamaker2.Shapes.Shape.h">
            <summary>
            図形の基本要素
            </summary>
        </member>
        <member name="F:Charamaker2.Shapes.Shape._rad">
            <summary>
            カクード
            </summary>
        </member>
        <member name="P:Charamaker2.Shapes.Shape.rad">
            <summary>
            セットする際は-Pi＜＝rad＜＝Piの範囲にする。そして重心で回転させる
            </summary>
        </member>
        <member name="F:Charamaker2.Shapes.Shape.points">
            <summary>
            図形の頂点の相対座標ども
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getzettaipoints(System.Boolean)">
            <summary>
            絶対座標に直した各頂点を取得する
            </summary>
            <param name="kaburinasi">被らない範囲のやつだけ</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getSoutaiPoints(System.Boolean)">
            <summary>
            各頂点の相対座標を取得する
            </summary>
            <param name="kaburinasi">被らない範囲のやつだけ</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.atarun2(Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape,Charamaker2.Shapes.Shape)">
            <summary>
            図形が当たっているか
            </summary>
            <param name="p">1フレーム前の自分</param>
            <param name="e">相手</param>
            <param name="pe">1フレーム前の相手</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.atarun(Charamaker2.Shapes.Shape)">
            <summary>
            図形が当たっているか
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Charamaker2.Shapes.Shape.gaisyuu">
            <summary>
            図形の外周の長さを返す
            </summary>
            <returns></returns>
        </member>
        <member name="P:Charamaker2.Shapes.Shape.menseki">
            <summary>
            図形の面積を返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setpoints(System.Collections.Generic.List{Charamaker2.Shapes.FXY})">
            <summary>
            頂点の座標をセットする
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setMirror(System.Int32)">
            <summary>
            図形をいい感じに反転させる(方向を決める)メソッド大体のやつは左右等しいので意味ないけど
            </summary>
            <param name="mir">1で右向き、-1で左向きに0で普通の反転</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.#ctor(System.Single,System.Single,System.Single,System.Single,System.Double,System.Collections.Generic.List{Charamaker2.Shapes.FXY})">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="xx">ｘ座標</param>
            <param name="yy">ｙ座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="radd">角度</param>
            <param name="points">図形の頂点の相対座標(w,hに対する比)ども(0~1)</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getcx(System.Single,System.Single)">
            <summary>
            図形上の一点のx座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときの図形の点の位置</param>
            <param name="hh">左上を0としたときの図形の点の位置</param>
            <returns>返されるのはx座標の値</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getcy(System.Single,System.Single)">
            <summary>
            図形上の一点のy座標を取得する(回転の影響を考慮してるってこと)
            </summary>
            <param name="ww">左上を0としたときの図形の点の位置</param>
            <param name="hh">左上を0としたときの図形の点の位置</param>
            <returns>返されるのはy座標の値</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getCenter">
            <summary>
            中心の絶対座標を求める
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getSoutaiCenter">
            <summary>
            中心の相対座標を求める
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.gettx">
            <summary>
            重心のx座標を返す
            </summary>
            <returns>返されるのはx座標の値</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getty">
            <summary>
            重心のy座標を返す
            </summary>
            <returns>返されるのはy座標の値</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.settxy(System.Single,System.Single)">
            <summary>
            重心をxy座標にセットする。
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setcxy(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            図形上の任意の一点をxy座標にセットする
            </summary>
            <param name="xx">セットするx座標</param>
            <param name="yy">セットするy座標</param>
            <param name="cw">図形上のwの点</param>
            <param name="ch">図形上のhの点</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setradcxy(System.Double,System.Single,System.Single)">
            <summary>
            任意の点で図形の角度をセットする
            </summary>
            <param name="trad">回転角</param>
            <param name="cw">図形上のwの点</param>
            <param name="ch">図形上のhの点</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setto(Charamaker2.picture)">
            <summary>
            図形をピクチャーにかぶせるっていうかセットする
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.setto(Charamaker2.Character.character)">
            <summary>
            図形をキャラクターにかぶせるっていうかセットする
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.scale(System.Single)">
            <summary>
            中心の座標を変えずにサイズを拡大縮小する
            </summary>
            <param name="sc">スケール</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.drawshape(Charamaker2.hyojiman,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            図形を描画する
            </summary>
            <param name="hyojiman">描画するhyojiman</param>
            <param name="R">線の色</param>
            <param name="G">線の色</param>
            <param name="B">線の色</param>
            <param name="A">線の不透明度</param>
            <param name="hutosa">線のふとさ</param>
            <param name="begin">hyojimanのbegindrawをついでにするか(すると重くなるので外部でやるのがおススメ)</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.drawn(Vortice.Mathematics.Color4,System.Single,Charamaker2.hyojiman)">
            <summary>
            図形それぞれの描画の部分の本体
            </summary>
            <param name="col">カラー</param>
            <param name="hyo">表示する画面</param>
            <param name="hutosa">線の太さ</param>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.onhani(Charamaker2.Shapes.Shape,System.Single)">
            <summary>
            その図形が図形内にあるかのどうかの判定。両側からやってくれる
            </summary>
            <param name="s">その図形</param>
            <param name="onis">1.0001とかでちょっとアバウトに判定してくれる</param>
            <returns>あるか</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.onhani(System.Single,System.Single,System.Single)">
            <summary>
            その点が図形内にあるかのどうかの判定
            </summary>
            <param name="px">その点のx座標</param>
            <param name="py">その点のy座標</param>
            <param name="onis">1.0001とかでちょっとアバウトに判定してくれる</param>
            <returns>あるか</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.onhani(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            その線が図形と接触するかどうかの判定
            </summary>
            <param name="px">その点のx座標1</param>
            <param name="py">その点のy座標1</param>
            <param name="ppx">その点のx座標2</param>
            <param name="ppy">その点のy座標2</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getgaisyuus(System.Single,System.Single,System.Double)">
            <summary>
            図形の外周の辺のリストを手に入れる。引数無しで重心を中心とした相対座標で出してくれる
            </summary>
            <param name="x">中心座標x</param>>
            <param name="y">中心座標y</param>>
            <param name="rad">重心を中心とした回転角</param>>
            <returns>外周のリスト(相対座標){{x1,y1,x2,y2},{x1,y1,x2,y2}}</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getgaisyuus2">
            <summary>
            外周を絶対座標にして返す
            </summary>
            <returns>外周のリスト(絶対座標)</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.clonepoints">
            <summary>
            頂点を複製する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.clone">
            <summary>
            図形を複製する
            </summary>
            <returns>複製された図形</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.syatei">
            <summary>
            図形の重心からの最大の距離
            </summary>
            <returns>その射程</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.kyori(Charamaker2.Shapes.Shape)">
             <summary>
            図形と図形の重心の距離を測る
             </summary>
             <param name="s">その図形の片割れ</param>
             <returns>距離</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.kyori(System.Single,System.Single)">
            <summary>
            図形の重心とある座標の距離を測る
            </summary>
            <param name="px">そのx座標</param>
            <param name="py">そのy座標</param>
            <returns>距離</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.nasukaku(Charamaker2.Shapes.Shape)">
            <summary>
            図形と図形の重心の紡ぐ線の角度を計る
            </summary>
            <param name="s">その図形</param>
            <returns>角度</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.nasukaku(System.Single,System.Single)">
            <summary>
            図形の重心とある座標の紡ぐ線の角度を測る
            </summary>
            <param name="px">そのx座標</param>
            <param name="py">そのy座標</param>
            <returns>角度</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.atattenai(Charamaker2.Shapes.Shape)">
            <summary>
            接触していないことを判定する。接触していること判定できない
            </summary>
            <param name="s"></param>
            <returns>絶対に接触していないか</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.kasanari(Charamaker2.Shapes.Shape)">
            <summary>
            図形同士が重なっているか調べる。両側からやる
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getnearestline(Charamaker2.Shapes.FXY)">
            <summary>
            指定した点に最もふさわしい辺を見つける
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.getnearestline(System.Single,System.Single)">
            <summary>
            指定した点に最もふさわしい辺を見つける
            </summary>
            <param name="px"></param>
            <param name="py"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.tokeimawari2">
            <summary>
            外周が時計回りで並んでいるかどうか
            </summary>
            <returns>時計回りか？</returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.tokeimawari(System.Collections.Generic.List{System.Double[]})">
            <summary>
            外周が時計回りで並んでいるかどうか
            </summary>
            <param name="gaisyuu">なんでもいいから外周</param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.hosenton(System.Collections.Generic.List{System.Double[]},System.Double)">
            <summary>
            対象の角の法線ベクトルを出す
            </summary>
            <param name="gaisyuu">なんでもいいから外周</param>
            <param name="taisyo"></param>
            <returns></returns>
        </member>
        <member name="M:Charamaker2.Shapes.Shape.idou(System.Single,System.Single)">
            <summary>
            図形を単純に移動させる
            </summary>
            <param name="dx">移動するxの距離</param>
            <param name="dy">移動するyの距離</param>
        </member>
        <member name="T:Charamaker2.Shapes.Rectangle">
            <summary>
            四角形を表すクラス
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Double)">
            <summary>
            四角形を作る。ちなみにこの時回転は指定したx,yを中心に行われる
            </summary>
            <param name="xx">x座標</param>
            <param name="yy">y座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="radd">回転角度</param>
        </member>
        <member name="M:Charamaker2.Shapes.Rectangle.clone">
            <summary>
            図形を複製する
            </summary>
            <returns>複製された図形</returns>
        </member>
        <member name="T:Charamaker2.Shapes.Triangle">
            <summary>
            三角形を表すクラス。
            しかし|>こういう左の辺がy軸と平行で右の先端が左の辺のy座標の間にあるな形の三角形しか作れない。
            </summary>
        </member>
        <member name="P:Charamaker2.Shapes.Triangle.basehoukou">
            <summary>
            三角形の先の方向。1で右-1で左2で下
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Charamaker2.Shapes.Triangle.haji" -->
        <member name="M:Charamaker2.Shapes.Triangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,System.Int32)">
            <summary>
            三角形を作る。左辺が底で右が先端。
            </summary>
            <param name="xx">x座標</param>
            <param name="yy">y座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="hajih">高さと先端の高さの割合。0で左上の角が90°になる</param>
            <param name="hou">三角形の先端の方向1で右-1で左2で下</param>
            <param name="radd">回転角度</param>
        </member>
        <member name="M:Charamaker2.Shapes.Triangle.changehoukou">
            <summary>
            三角形の方向を変えたり変えなかったり
            </summary>
        </member>
        <member name="T:Charamaker2.Shapes.Circle">
            <summary>
            円を表すクラス
            </summary>
        </member>
        <member name="P:Charamaker2.Shapes.Circle.onerad">
            <summary>
            1角の角度
            </summary>
        </member>
        <member name="P:Charamaker2.Shapes.Circle.onelen">
            <summary>
            1辺の長さ
            </summary>
        </member>
        <member name="M:Charamaker2.Shapes.Circle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Double,System.Int32)">
            <summary>
            円を作り出す。円はあたり判定の時、多角形に近似される。
            </summary>
            <param name="xx">x座標</param>
            <param name="yy">y座標</param>
            <param name="ww">幅</param>
            <param name="hh">高さ</param>
            <param name="radd">回転角</param>
            <param name="pointkinji">近似する多角形の画数</param>
        </member>
        <member name="F:Charamaker2.sortnode`1.o">
            <summary>
            ソート対象のオブジェクト
            </summary>
        </member>
        <member name="F:Charamaker2.sortnode`1.v">
            <summary>
            ソートするための値
            </summary>
        </member>
        <member name="M:Charamaker2.sortnode`1.#ctor(`0,System.Single)">
            <summary>
            普通のコンストラクタ
            </summary>
            <param name="obj">ソートするオブジェクト</param>
            <param name="value">その値</param>
        </member>
        <member name="T:Charamaker2.supersort`1">
            <summary>
            任意の物体をソートするためのクラス
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Charamaker2.supersort`1.add(`0,System.Single)">
            <summary>
            ソートするものを追加する
            </summary>
            <param name="obj">物体</param>
            <param name="value">ソートするための値</param>
        </member>
        <member name="M:Charamaker2.supersort`1.sort(System.Boolean)">
            <summary>
            ソートを行う
            </summary>
            <param name="ookiijyunn">大きい順に並べるか</param>
        </member>
        <member name="M:Charamaker2.supersort`1.swap(System.Int32,System.Int32)">
            <summary>
            物体を交換する
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Charamaker2.supersort`1.conveyor(System.Int32,System.Int32)">
            <summary>
            物体を指定位置に挿入するように移動させる
            </summary>
            <param name="koitu">物体のインデックス</param>
            <param name="kokoni">挿入する位置</param>
        </member>
        <member name="M:Charamaker2.supersort`1.getresult(System.Boolean)">
            <summary>
            ソートされたベクトルを受け取る
            </summary>
            <param name="back">逆にして受け取るか</param>
            <returns></returns>
        </member>
        <member name="T:Charamaker2.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Charamaker2.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Charamaker2.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
    </members>
</doc>
